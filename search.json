[
  {
    "objectID": "01_langchain_snippets/get_data.html",
    "href": "01_langchain_snippets/get_data.html",
    "title": "Getting data for LLMs",
    "section": "",
    "text": "from langchain.document_loaders import ArxivLoader\n\n\ndocs = ArxivLoader(query=\"2306.07902\", load_max_docs=1).load()\n\n\ndocs[0]\n\nDocument(page_content='Massively Multilingual Corpus of Sentiment Datasets\\nand Multi-faceted Sentiment Classification Benchmark\\nŁukasz Augustyniak\\nWUST (Wrocław University of Science and Technology)\\nlukasz.augustyniak@pwr.wroc.pl\\nSzymon Wo´zniak\\nBrand24 AI\\nMarcin Gruza\\nBrand24 AI, WUST\\nPiotr Gramacki\\nBrand24 AI, WUST\\nKrzysztof Rajda\\nBrand24 AI, WUST\\nMikołaj Morzy\\nPozna´n University of Technology\\nTomasz Kajdanowicz\\nWUST\\nAbstract\\nDespite impressive advancements in multilingual corpora collection and model\\ntraining, developing large-scale deployments of multilingual models still presents\\na significant challenge. This is particularly true for language tasks that are culture-\\ndependent. One such example is the area of multilingual sentiment analysis,\\nwhere affective markers can be subtle and deeply ensconced in culture. This work\\npresents the most extensive open massively multilingual corpus of datasets for\\ntraining sentiment models. The corpus consists of 79 manually selected datasets\\nfrom over 350 datasets reported in the scientific literature based on strict quality\\ncriteria. The corpus covers 27 languages representing 6 language families. Datasets\\ncan be queried using several linguistic and functional features. In addition, we\\npresent a multi-faceted sentiment classification benchmark summarizing hundreds\\nof experiments conducted on different base models, training objectives, dataset\\ncollections, and fine-tuning strategies.\\n1\\nIntroduction\\nConsider a hotel booking service that allows its customers to post reviews. You have found just the\\nperfect accommodation to stay for a couple of days with your family, but you browse through the\\nreviews section of the website to check the experiences of former guests. Suddenly, you encounter\\na review in Polish: \"hotel jak hotel, mogło by´c gorzej.\" This review has the following sentiment\\nscores1: sneg = 0.44, sneu = 0.44, spos = 0.12. Intrigued by the ambiguity of scores, you\\ntranslate the review into English: \"hotel like a hotel, all in all, it could have been worse,\" which\\nis scored as sneg = 0.80, sneu = 0.16, spos = 0.04. Apparently, the stereotypically pessimistic\\nPolish outlook on life gets lost in translation. The next review is written in Czech: \"ok, ale nic\\nzajímavého\" with scores sneg = 0.32, sneu = 0.54, spos = 0.14. After translating into English\\n(\"ok, but nothing interesting\") the sentiment classification model scores the review as negative\\n(sneg = 0.50, sneu = 0.37, spos = 0.13). After your stay, you decide to add a very positive review\\nof the hotel (\"it was a killer place to stay\", sneg = 0.03, sneu = 0.05, spos = 0.92). You would be\\nvery surprised to learn that the Czechs would be quite confused about your opinion (\"to bylo vražedné\\n1Sentiment\\nscores\\nin\\nthis\\nparagraph\\nare\\nproduced\\nby\\nthe\\nmultilingual\\ncardiffnlp/twitter-xlm-roberta-base-sentiment model [9]\\nPreprint. Under review.\\narXiv:2306.07902v1  [cs.CL]  13 Jun 2023\\nmísto k pobytu\", sneg = 0.51, sneu = 0.09, spos = 0.39), while the Poles would stay away from the\\nhotel at all costs (\"to było zabójcze miejsce na pobyt\", sneg = 0.78, sneu = 0.09, spos = 0.13).\\nmultilingual services become ubiquitous in the modern global economy. As more websites begin to\\noffer automatic translation of content, users do not bother to express themselves in the lingua franca\\nof the Web, writing instead in their native languages. Despite impressive advancements in automatic\\ntranslation, many NLP tasks are still difficult in the multilingual setting. And sentiment classification\\nis among the most challenging. The expression of sentiment is highly culture-dependent [28]. The\\nemotional valence of individual words, the presence of specific phrasemes, and the expectations\\naround sentiment values make sentiment classification across languages a demanding task.\\nModels performing sentiment classifications have to cope with two independent sources of variance\\nin the input data: cultural expressions of sentiment and errors in automatic translations. In addition,\\nthe productizatio', metadata={'Published': '2023-06-13', 'Title': 'Massively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark', 'Authors': 'Łukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz', 'Summary': 'Despite impressive advancements in multilingual corpora collection and model\\ntraining, developing large-scale deployments of multilingual models still\\npresents a significant challenge. This is particularly true for language tasks\\nthat are culture-dependent. One such example is the area of multilingual\\nsentiment analysis, where affective markers can be subtle and deeply ensconced\\nin culture. This work presents the most extensive open massively multilingual\\ncorpus of datasets for training sentiment models. The corpus consists of 79\\nmanually selected datasets from over 350 datasets reported in the scientific\\nliterature based on strict quality criteria. The corpus covers 27 languages\\nrepresenting 6 language families. Datasets can be queried using several\\nlinguistic and functional features. In addition, we present a multi-faceted\\nsentiment classification benchmark summarizing hundreds of experiments\\nconducted on different base models, training objectives, dataset collections,\\nand fine-tuning strategies.'})"
  },
  {
    "objectID": "00_llm_intro/intro_to_llms.html",
    "href": "00_llm_intro/intro_to_llms.html",
    "title": "Guidelines for Prompting",
    "section": "",
    "text": "If you use google colab please install the following packages:\n!pip install \"panel&gt;=1.1.0\" \"tiktoken&gt;=0.3.3\" \"openai&gt;=0.27.8\"\n\n\nWe can use .env files to load openai key or pass it directly in jupyter.\nPlease rememeber to remove the key from notebook before pushing to git or remove the key in OpenAI settings.\nI added to the repository keys from OpenIA (they have been already disabled, but it is a nice exercise to find them in the git history)\n\nGood Luck :)\n\n# to usse the .env file you could need to load enbironment variables with dotenv library \n# !pip install python-dotenv\n\n# import os\n\n# from dotenv import load_dotenv, find_dotenv\n\n# _ = load_dotenv(find_dotenv())\n# openai.api_key  = os.getenv('OPENAI_API_KEY')\n\nOtherwie you can use the following code to pass the key directly in the notebook.\n\nimport openai\nimport os\n\n\n# openai.api_key = \"sk-....\"\n\n\ndef get_completion(prompt, model=\"gpt-3.5-turbo\"):\n    messages = [{\"role\": \"user\", \"content\": prompt}]\n    response = openai.ChatCompletion.create(\n        model=model,\n        messages=messages,\n        temperature=0, # this is the degree of randomness of the model's output\n    )\n    return response.choices[0].message[\"content\"]\n\ndef get_completion_from_messages(messages, model=\"gpt-3.5-turbo\", temperature=0):\n    response = openai.ChatCompletion.create(\n        model=model,\n        messages=messages,\n        temperature=temperature, # this is the degree of randomness of the model's output\n    )\n#     print(str(response.choices[0].message))\n    return response.choices[0].message[\"content\"]"
  },
  {
    "objectID": "00_llm_intro/intro_to_llms.html#setup",
    "href": "00_llm_intro/intro_to_llms.html#setup",
    "title": "Guidelines for Prompting",
    "section": "",
    "text": "If you use google colab please install the following packages:\n!pip install \"panel&gt;=1.1.0\" \"tiktoken&gt;=0.3.3\" \"openai&gt;=0.27.8\"\n\n\nWe can use .env files to load openai key or pass it directly in jupyter.\nPlease rememeber to remove the key from notebook before pushing to git or remove the key in OpenAI settings.\nI added to the repository keys from OpenIA (they have been already disabled, but it is a nice exercise to find them in the git history)\n\nGood Luck :)\n\n# to usse the .env file you could need to load enbironment variables with dotenv library \n# !pip install python-dotenv\n\n# import os\n\n# from dotenv import load_dotenv, find_dotenv\n\n# _ = load_dotenv(find_dotenv())\n# openai.api_key  = os.getenv('OPENAI_API_KEY')\n\nOtherwie you can use the following code to pass the key directly in the notebook.\n\nimport openai\nimport os\n\n\n# openai.api_key = \"sk-....\"\n\n\ndef get_completion(prompt, model=\"gpt-3.5-turbo\"):\n    messages = [{\"role\": \"user\", \"content\": prompt}]\n    response = openai.ChatCompletion.create(\n        model=model,\n        messages=messages,\n        temperature=0, # this is the degree of randomness of the model's output\n    )\n    return response.choices[0].message[\"content\"]\n\ndef get_completion_from_messages(messages, model=\"gpt-3.5-turbo\", temperature=0):\n    response = openai.ChatCompletion.create(\n        model=model,\n        messages=messages,\n        temperature=temperature, # this is the degree of randomness of the model's output\n    )\n#     print(str(response.choices[0].message))\n    return response.choices[0].message[\"content\"]"
  },
  {
    "objectID": "00_llm_intro/intro_to_llms.html#prompting-principles",
    "href": "00_llm_intro/intro_to_llms.html#prompting-principles",
    "title": "Guidelines for Prompting",
    "section": "Prompting Principles",
    "text": "Prompting Principles\n\nPrinciple 1: Write clear, specific instructions with context of the task\nPrinciple 2: Give the model time to “think”\n\n\nTactics\n\nTactic 1: Use delimiters to clearly indicate distinct parts of the input\n\nDelimiters can be anything like: ``, \"\"\", &lt; &gt;, ,:`\n\n\ntext = f\"\"\"\nYou should express what you want a model to do by \\ \nproviding instructions that are as clear and \\ \nspecific as you can possibly make them. \\ \nThis will guide the model towards the desired output, \\ \nand reduce the chances of receiving irrelevant \\ \nor incorrect responses. Don't confuse writing a \\ \nclear prompt with writing a short prompt. \\ \nIn many cases, longer prompts provide more clarity \\ \nand context for the model, which can lead to \\ \nmore detailed and relevant outputs.\n\"\"\"\nprompt = f\"\"\"\nSummarize the text delimited by triple backticks into a single sentence.\n```{text}```\n\"\"\"\n\n\nresponse = get_completion(prompt)\nprint(response)\n\nTo guide a model towards the desired output and reduce irrelevant or incorrect responses, it is important to provide clear and specific instructions, which may require longer prompts for more clarity and context.\n\n\n\ntext_pl = f\"\"\"\nPisząc prompty nalezy wyrazić, co model ma robić, dostarczając instrukcje, które są tak jasne i szczegółowe, jak to tylko możliwe.\nPoprowadzi to model w kierunku pożądanego efektu i zmniejsza szanse na otrzymanie nieistotnych lub nieprawidłowych odpowiedzi.\nNie należy mylić pisania jasnej podpowiedzi z krótką podpowiedzią. \nW wielu przypadkach dłuższe prompty zapewniają większą jasność i kontekst dla modelu. \n\"\"\"\n\n\nprompt_pl = f\"\"\"\nPodsumuj tekst ograniczony potrójnymi znakami ``` w jedno zdanie.\n```{text_pl}```\n\"\"\"\nresponse_pl = get_completion(prompt_pl)\nprint(response_pl)\n\nJasne i szczegółowe instrukcje w promptach pomagają modelowi osiągnąć pożądany efekt i uniknąć nieistotnych lub nieprawidłowych odpowiedzi.\n\n\n\nprompt_pl = f\"\"\"\nPodsumuj tekst ograniczony potrójnymi znakami ``` w jedno zdanie w stylu nastolatka korzystającego z emoji.\n```{text_pl}```\n\"\"\"\nresponse_pl = get_completion(prompt_pl)\nprint(response_pl)\n\n🤖💬 Jasne i szczegółowe prompty pomagają modelowi osiągnąć pożądany efekt, więc nie bądź leniwy i pisz dłuższe podpowiedzi! 📝👍\n\n\n\n\nTactic 2: Ask for a structured output\n\nJSON, HTML, Markdown, etc.\n\n\nprompt = f\"\"\"\nGenerate a list of 5 best workshop topics for AI Tech Summer School that is a AI related school.\nWrite title, lecturer name, and description for each topic.\nProvide them in markdown table the following keys: \ntitle, lecturer, description.\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n\n| Title | Lecturer | Description |\n| --- | --- | --- |\n| Introduction to Machine Learning | John Smith | This workshop will provide an overview of machine learning, including supervised and unsupervised learning, and the basics of neural networks. Participants will learn how to build and train a simple machine learning model using Python. |\n| Natural Language Processing | Jane Doe | This workshop will cover the basics of natural language processing (NLP), including text preprocessing, sentiment analysis, and named entity recognition. Participants will learn how to use popular NLP libraries such as NLTK and spaCy to analyze text data. |\n| Computer Vision | David Lee | This workshop will introduce participants to computer vision, including image classification, object detection, and image segmentation. Participants will learn how to use popular computer vision libraries such as OpenCV and TensorFlow to build and train models. |\n| Reinforcement Learning | Sarah Kim | This workshop will cover the basics of reinforcement learning, including Markov decision processes, Q-learning, and policy gradients. Participants will learn how to build and train a simple reinforcement learning model using Python. |\n| Deep Learning for Image Recognition | Michael Chen | This workshop will focus on deep learning techniques for image recognition, including convolutional neural networks (CNNs) and transfer learning. Participants will learn how to use popular deep learning frameworks such as Keras and PyTorch to build and train image recognition models. |\n\n\n\n\nTactic 3: Ask the model to check whether conditions are satisfied - reflect on the task\n\ntext_1 = f\"\"\"\nPreparation of the workshop is quite easy. However, you must follow some steps. \nFirstly, you need to choose the topic. Then review literature on this topic. Then prepare the materials.\nAnd finally you need to prepare the presentation and deliver the workshop.\n\"\"\"\nprompt = f\"\"\"\nYou will be provided with text delimited by triple =. \nIf it contains a sequence of steps, re-write those instructions in the following format:\n\nStep 1 - \nStep 2 - \nStep N - \n\nIf the text does not contain a sequence of steps, then simply write \\\"No steps are provided.\\\"\n\n==={text_1}===\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n\nStep 1 - Choose the topic.\nStep 2 - Review literature on the chosen topic.\nStep 3 - Prepare the materials.\nStep 4 - Prepare the presentation.\nStep 5 - Deliver the workshop.\n\n\n\ntext_2 = \"\"\"\nWitamy w nowej usłudze Bing\nPoznaj możliwości obsługiwanej przez sztuczną inteligencję funkcji Copilot w Internecie\n\n🧐 Zadawaj złożone pytania\n\"Jakie posiłki mogę przygotować dla mojego wybrednego malucha, który je tylko jedzenie w kolorze pomarańczowym?\"\n\n🙌 Uzyskaj lepsze odpowiedzi\n\"Jakie są zalety i wady 3 najczęściej kupowanych odkurzaczy dla zwierząt domowych?\"\n\n🎨 Zdobądź twórcze inspiracje\n\"Napisz wiersz haiku o krokodylach w kosmosie, w którym narratorem jest pirat\"\nUczmy się razem. Usługa Bing jest obsługiwana przez sztuczną inteligencję, więc są możliwe niespodzianki i błędy. Pamiętaj o sprawdzaniu faktów oraz przekaż opinię, abyśmy mogli się uczyć i rozwijać!\n\"\"\"\n\nprompt = f\"\"\"\nYou will be provided with text delimited by triple =. \nIf it contains a sequence of steps, re-write those instructions in the following format:\n\nStep 1 - \nStep 2 - \nStep N - \n\nIf the text does not contain a sequence of steps, then simply write `No steps provided.`\n\n==={text_2}===\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n\nNo steps provided.\n\n\n\n\nTactic 4: “Few-shot” prompting - use a few examples to show to the model how to behave\n\nprompt = \"\"\"\nI'm working in Custom Office and we want to synthetically generate data about shipments. Please generate one more examples.\n###\n{\n    \"id\": \"95ea9a1c-f934-4f08-bc74-3ff7c8da5464\",\n    \"exporter_country_name\": \"Indonesia\",\n    \"destination_country_name\": \"Portugal\",\n    \"exporter_country_code\": \"ID\",\n    \"destination_country_code\": \"PT\",\n    \"invoice_value\": 36513.02,\n    \"invoice_currency\": \"EUR\",\n    \"commodity_code\": 7108110000,\n    \"weight_gross\": 22.03,\n    \"weight_net\": 3.08,\n    \"importer_name\": \"Dawson, Lewis and Miller\",\n    \"declarant_person\": \"Lydia Reed\",\n    \"good_description\": \"II. PRECIOUS METALS AND METALS CLAD WITH PRECIOUS METAL -&gt; Gold (including gold plated with platinum), unwrought or in semi-manufactured forms, or in powder form -&gt; Non-monetary -&gt; Powder\",\n    \"exporter_name\": \"Hurst, Freeman and Kennedy\",\n    \"origin_country_name\": \"Viet Nam\",\n    \"origin_country_code\": \"VN\"\n}\n\"\"\"\n\n\nresponse = get_completion(prompt)\nprint(response)\n\n{\n    \"id\": \"b3c8d7e2-6f5a-4c5c-9c5d-8f5a9b1c2d4f\",\n    \"exporter_country_name\": \"China\",\n    \"destination_country_name\": \"United States\",\n    \"exporter_country_code\": \"CN\",\n    \"destination_country_code\": \"US\",\n    \"invoice_value\": 12000.50,\n    \"invoice_currency\": \"USD\",\n    \"commodity_code\": 8517120000,\n    \"weight_gross\": 45.20,\n    \"weight_net\": 38.10,\n    \"importer_name\": \"Smith and Sons\",\n    \"declarant_person\": \"John Doe\",\n    \"good_description\": \"VII. VEHICLES, AIRCRAFT, VESSELS AND ASSOCIATED TRANSPORT EQUIPMENT -&gt; Aircraft and associated equipment -&gt; Aircraft engines and parts thereof\",\n    \"exporter_name\": \"Changzhou Aviation Precision Machinery Co., Ltd.\",\n    \"origin_country_name\": \"China\",\n    \"origin_country_code\": \"CN\"\n}\n\n{\n    \"id\": \"f8e9d6c5-4b3a-2c1d-1e0f-9a8b7c6d5e4f\",\n    \"exporter_country_name\": \"Germany\",\n    \"destination_country_name\": \"France\",\n    \"exporter_country_code\": \"DE\",\n    \"destination_country_code\": \"FR\",\n    \"invoice_value\": 5000.00,\n    \"invoice_currency\": \"EUR\",\n    \"commodity_code\": 3004900000,\n    \"weight_gross\": 10.50,\n    \"weight_net\": 8.20,\n    \"importer_name\": \"Dupont Pharmaceuticals\",\n    \"declarant_person\": \"Sophie Martin\",\n    \"good_description\": \"VI. PRODUCTS OF THE CHEMICAL OR ALLIED INDUSTRIES -&gt; Pharmaceutical products -&gt; Medicaments (excluding goods of heading 30.02, 30.05 or 30.06) consisting of mixed or unmixed products for therapeutic or prophylactic uses, put up in measured doses (including those in the form of transdermal administration systems) or in forms or packings for retail sale\",\n    \"exporter_name\": \"Bayer AG\",\n    \"origin_country_name\": \"Germany\",\n    \"origin_country_code\": \"DE\"\n}\n\n{\n    \"id\": \"a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6\",\n    \"exporter_country_name\": \"Japan\",\n    \"destination_country_name\": \"Australia\",\n    \"exporter_country_code\": \"JP\",\n    \"destination_country_code\": \"AU\",\n    \"invoice_value\": 75000.00,\n    \"invoice_currency\": \"AUD\",\n    \"commodity_code\": 8703230000,\n    \"weight_gross\": 1500.00,\n    \"weight_net\": 1200.00,\n    \"importer_name\": \"Toyota Australia\",\n    \"declarant_person\": \"David Lee\",\n    \"good_description\": \"VII. VEHICLES, AIRCRAFT, VESSELS AND ASSOCIATED TRANSPORT EQUIPMENT -&gt; Motor cars and other motor vehicles principally designed for the transport of persons (other than those of heading 87.02), including station wagons and racing cars -&gt; Vehicles specially designed for travelling on snow; golf cars and similar vehicles\",\n    \"exporter_name\": \"Toyota Motor Corporation\",\n    \"origin_country_name\": \"Japan\",\n    \"origin_country_code\": \"JP\"\n}\n\n\n\n\n\nPrinciple 2: Give the model time to “think”\n\nTactic 1: Specify the steps required to complete a task\n\ntext = f\"\"\"\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\"\n# example 1\nprompt_1 = f\"\"\"\nPerform the following actions for a research paper text: \n1 - Summarize the following text delimited by triple backticks with 1 sentence.\n2 - Generate a title for this summary with emojis.\n3 - Prepare a tweet based on summary.\n4 - Prepare a linkedin post based on summary. \n\nSeparate your answers with line breaks.\n\nText:\n```{text}```\n\"\"\"\nresponse = get_completion(prompt_1)\nprint(response)\n\n🌍📊👍 \"Massively Multilingual Corpus of Sentiment Datasets\" presents a comprehensive collection of 79 datasets in 27 languages for sentiment analysis, along with a multi-faceted sentiment classification benchmark. \n\n📊🌍 \"Massively Multilingual Corpus of Sentiment Datasets\" provides a comprehensive collection of datasets in 27 languages for sentiment analysis, along with a multi-faceted sentiment classification benchmark. #sentimentanalysis #multilingual #corpus\n\n🌍📊 Looking for a comprehensive collection of sentiment datasets in multiple languages? Check out \"Massively Multilingual Corpus of Sentiment Datasets\" which also includes a multi-faceted sentiment classification benchmark. #sentimentanalysis #multilingual #corpus\n\n👍🌍 \"Massively Multilingual Corpus of Sentiment Datasets\" is a valuable resource for sentiment analysis researchers, providing a comprehensive collection of datasets in 27 languages and a multi-faceted sentiment classification benchmark. #sentimentanalysis #multilingual #corpus\n\n\n\n\nReturn strcutured output\n\ntext = f\"\"\"\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\"\n# example 1\nprompt_1 = f\"\"\"\nPerform the following actions for a research paper text: \n1 - Summarize the following text delimited by triple backticks with 1 sentence.\n2 - Generate a title for this summary with emojis.\n3 - Prepare a tweet based on summary.\n4 - Prepare a linkedin post based on summary. \n\nReturn a python dictionary with the following keys: summary, title, tweet, linkedin_post \n\nText:\n```{text}```\n\"\"\"\nresponse = get_completion(prompt_1)\nprint(response)\n\n{\n    \"summary\": \"📚 This paper presents a massively multilingual corpus of sentiment datasets consisting of 79 manually selected datasets from over 350 datasets reported in the scientific literature, covering 27 languages representing 6 language families, and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\",\n    \"title\": \"📚 Massive Multilingual Sentiment Corpus and Benchmark\",\n    \"tweet\": \"📚 This paper presents a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark covering 27 languages and summarizing hundreds of experiments. #sentimentanalysis #multilingual #corpus\",\n    \"linkedin_post\": \"Check out this paper presenting a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark covering 27 languages and summarizing hundreds of experiments. This is a significant contribution to the development of large-scale deployments of multilingual models, particularly in the area of multilingual sentiment analysis. #sentimentanalysis #multilingual #corpus #research\" \n}\n\n\n\n\nTactic 2: Instruct the model to work out its own solution before rushing to a conclusion\n\nquestion = f\"\"\"\nQuestion:\nI'm organizing a conference that will need a space for up to 1000 people. \n- Renting the space costs $500/day\n- Catering the conference costs $50/person\n- I'll need to hire 3 staff members for the duration of the conference at $75/day/person\nWhat is the total cost for the conference as a function of the number of people attending?\n\nStudent's Solution:\nLet x be the number of people attending the conference.\nCosts:\n1. Space rental cost: 500\n2. Catering cost: 50\n3. Staff cost: 75 \nTotal cost: 500 + 50x + 75x = 620x + 500\n\"\"\"\n\n\nprompt = f\"\"\"\nDetermine if the student's solution is correct or not.\n{question}\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n\nThe student's solution is correct.\n\n\n\nprompt = f\"\"\"\nYour task is to determine if the student's solution is correct or not.\n\nTo solve the problem do the following:\n- First, work out your own solution to the problem. \n- Then compare your solution to the student's solution and evaluate if the student's solution is correct or not. \nDon't decide if the student's solution is correct until you have done the problem yourself.\n\nWrite down your steps and highlight the differences between your solution and the student's solution.\n\n{question}\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n\nMy Solution:\nLet x be the number of people attending the conference.\nCosts:\n1. Space rental cost: 500\n2. Catering cost: 50x\n3. Staff cost: 3 * 75 * number of days of conference\nTotal cost: 500 + 50x + 3 * 75 * number of days of conference\n\nDifference:\nThe student's solution assumes that the staff cost is a fixed cost of $75 per person per day, regardless of the number of days of the conference. However, the staff cost should be dependent on the number of days of the conference. My solution takes this into account by multiplying the number of days of the conference by the number of staff members and the daily rate of $75."
  },
  {
    "objectID": "00_llm_intro/intro_to_llms.html#model-limitations-and-problem",
    "href": "00_llm_intro/intro_to_llms.html#model-limitations-and-problem",
    "title": "Guidelines for Prompting",
    "section": "Model Limitations and Problem:",
    "text": "Model Limitations and Problem:\n\nHallucinations\n\nprompt = f\"\"\"\nWrite me about a new product called \"The Autonomous Research Assistant\" created by Wrocław University of Science and Technology.\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n\nThe Autonomous Research Assistant is a revolutionary new product developed by the Wrocław University of Science and Technology. This cutting-edge technology is designed to assist researchers in their work by automating many of the tedious and time-consuming tasks that are typically associated with research.\n\nThe Autonomous Research Assistant is a sophisticated machine learning system that is capable of analyzing vast amounts of data and identifying patterns and trends that would be difficult or impossible for a human researcher to detect. It can also generate reports and summaries of its findings, making it easy for researchers to quickly and easily understand the results of their experiments.\n\nOne of the key features of the Autonomous Research Assistant is its ability to learn and adapt over time. As it analyzes more data and gains more experience, it becomes increasingly accurate and efficient, allowing researchers to focus on more complex and challenging tasks.\n\nAnother important aspect of the Autonomous Research Assistant is its user-friendly interface. Researchers can easily interact with the system using natural language commands, making it easy to get the information they need quickly and efficiently.\n\nOverall, the Autonomous Research Assistant is a game-changing product that has the potential to revolutionize the way research is conducted. By automating many of the tedious and time-consuming tasks associated with research, it allows researchers to focus on more important and challenging work, ultimately leading to faster and more accurate results.\n\n\n\nprompt = f\"\"\"\nOpisz Albański Wordnet wskazując na to jaki długowłosy wojownik z krajów bałkańskich go stworzył?\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n\nAlbański Wordnet to system leksykalny, który został stworzony przez długowłosego wojownika z krajów bałkańskich o imieniu Artan. Artan był z pochodzenia Albańczykiem i miał głęboką wiedzę na temat języka albańskiego oraz jego związków z innymi językami bałkańskimi. W oparciu o swoją wiedzę i doświadczenie, Artan stworzył Albański Wordnet, który jest narzędziem służącym do analizy semantycznej języka albańskiego. System ten zawiera wiele informacji na temat znaczeń słów, ich synonimów, antonimów oraz związków semantycznych między nimi. Dzięki temu Albański Wordnet jest bardzo przydatnym narzędziem dla lingwistów, badaczy języka oraz tłumaczy."
  },
  {
    "objectID": "00_llm_intro/intro_to_llms.html#iterative-prompt-refinement",
    "href": "00_llm_intro/intro_to_llms.html#iterative-prompt-refinement",
    "title": "Guidelines for Prompting",
    "section": "Iterative prompt refinement",
    "text": "Iterative prompt refinement\nNot always the first pormpt is the best one.\n\ntext = f\"\"\"\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\"\n# example 1\nprompt_1 = f\"\"\"\nPerform the following actions for a research paper text: \n1 - Summarize the following text delimited by triple backticks with 1 sentence.\n2 - Generate a title for this summary with emojis.\n3 - Prepare a tweet based on summary.\n4 - Prepare a linkedin post based on summary. \n\nReturn a python dictionary with the following keys: summary, title, tweet, linkedin_post \n\nText:\n```{text}```\n\"\"\"\nresponse = get_completion(prompt_1)\nprint(response)\n\n{\n    \"summary\": \"📚 This paper presents a massively multilingual corpus of sentiment datasets consisting of 79 manually selected datasets from over 350 datasets reported in the scientific literature, covering 27 languages representing 6 language families, and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\",\n    \"title\": \"📚 Massive Multilingual Sentiment Corpus and Benchmark\",\n    \"tweet\": \"📚 This paper presents a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark covering 27 languages and summarizing hundreds of experiments. #sentimentanalysis #multilingual #corpus\",\n    \"linkedin_post\": \"Check out this paper presenting a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark covering 27 languages and summarizing hundreds of experiments. This is a significant contribution to the development of large-scale deployments of multilingual models, particularly in the area of multilingual sentiment analysis. #sentimentanalysis #multilingual #corpus #research\" \n}\n\n\nLinked in post could be longer…\n\ntext = f\"\"\"\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\"\n# example 1\nprompt_1 = f\"\"\"\nPerform the following actions for a research paper text: \n1 - Summarize the following text delimited by triple backticks with 1 sentence.\n2 - Generate a title for this summary with emojis.\n3 - Prepare a tweet based on summary.\n4 - Prepare a longer linkedin post based on paper abstract. \n\nReturn a python dictionary with the following keys: summary, title, tweet, linkedin_post \n\nText:\n```{text}```\n\"\"\"\nresponse = get_completion(prompt_1)\nprint(response)\n\n{\n    \"summary\": \"🌍📊 Researchers present a massively multilingual corpus of sentiment datasets consisting of 79 manually selected datasets from over 350 reported in scientific literature, covering 27 languages and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments.\",\n    \"title\": \"🌍📊 Massively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\",\n    \"tweet\": \"🌍📊 Researchers present a massively multilingual corpus of sentiment datasets covering 27 languages and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments. #multilingual #sentimentanalysis #datasets\",\n    \"linkedin_post\": \"Developing large-scale deployments of multilingual models still presents a significant challenge, particularly for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. In this paper, researchers present the most extensive open massively multilingual corpus of datasets for training sentiment models, consisting of 79 manually selected datasets from over 350 reported in scientific literature, covering 27 languages representing 6 language families. The corpus can be queried using several linguistic and functional features. Additionally, the paper presents a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. This work is a significant contribution to the field of multilingual sentiment analysis and will aid in the development of large-scale deployments of multilingual models.\" \n}\n\n\n\ntext = f\"\"\"\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\"\n# example 1\nprompt_1 = f\"\"\"\nPerform the following actions for a research paper text: \n1 - Summarize the following text delimited by triple backticks with 1 sentence.\n2 - Generate a title for this summary with emojis.\n3 - Prepare a tweet thread with 3 tweets based on summary.\n4 - Prepare a longer linkedin post based on paper abstract. \n\nReturn a python dictionary with the following keys: summary, title, tweet, linkedin_post \n\nText:\n```{text}```\n\"\"\"\nresponse = get_completion(prompt_1)\nprint(response)\n\n{\n    \"summary\": \"🌍📊 Researchers present a massively multilingual corpus of sentiment datasets consisting of 79 manually selected datasets from over 350 datasets reported in the scientific literature, covering 27 languages representing 6 language families, and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\",\n    \"title\": \"🌍📊 Massively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\",\n    \"tweet\": [\"🌍📊 Researchers present a massively multilingual corpus of sentiment datasets covering 27 languages and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments. #multilingual #sentimentanalysis\", \"The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. #datasets #qualitycriteria\", \"The benchmark summarizes experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. #experiments #sentimentclassification\"],\n    \"linkedin_post\": \"Developing large-scale deployments of multilingual models still presents a significant challenge, particularly for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. In this research paper, the authors present the most extensive open massively multilingual corpus of datasets for training sentiment models, covering 27 languages representing 6 language families. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. Additionally, the authors present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. This work is a significant contribution to the field of multilingual sentiment analysis and will aid researchers in developing more accurate and culturally sensitive sentiment models.\" \n}\n\n\n\ntext = f\"\"\"\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\"\n# example 1\nprompt_1 = f\"\"\"\nPerform the following actions for a research paper text: \n1 - Summarize the following text delimited by triple backticks with 1 sentence.\n2 - Generate a title for this summary with emojis.\n3 - Prepare a tweet thread with 3 tweets based on summary.\n4 - Prepare a longer linkedin post based on paper abstract. \n\nReturn a markdown table with the following columns: summary, title, tweet, linkedin_post \n\nText:\n```{text}```\n\"\"\"\nresponse = get_completion(prompt_1)\nprint(response)\n\n| Summary | Title | Tweet | LinkedIn Post |\n| --- | --- | --- | --- |\n| The paper presents a massively multilingual corpus of sentiment datasets for training sentiment models, consisting of 79 manually selected datasets from over 350 datasets reported in the scientific literature, covering 27 languages representing 6 language families, and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. | 🌍📊👥 A Massive Multilingual Corpus of Sentiment Datasets and Classification Benchmark | 1/3: 🌍📊👥 The paper presents a massively multilingual corpus of sentiment datasets for training sentiment models covering 27 languages and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments. #multilingual #sentimentanalysis #corpus | The paper presents a massively multilingual corpus of sentiment datasets for training sentiment models and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria, covering 27 languages representing 6 language families. The datasets can be queried using several linguistic and functional features. #multilingual #sentimentanalysis #corpus #benchmark |\n| 2/3: 🤖💬 The corpus can be queried using several linguistic and functional features, making it a valuable resource for developing large-scale deployments of multilingual sentiment models. #NLP #AI #sentimentanalysis | 3/3: 📈🔍 The multi-faceted sentiment classification benchmark provides a comprehensive evaluation of different approaches to sentiment analysis, enabling researchers to compare and improve their models. #machinelearning #evaluation #benchmark | The corpus can be queried using several linguistic and functional features, making it a valuable resource for developing large-scale deployments of multilingual sentiment models. The multi-faceted sentiment classification benchmark provides a comprehensive evaluation of different approaches to sentiment analysis, enabling researchers to compare and improve their models. The paper highlights the challenges of developing large-scale deployments of multilingual models for language tasks that are culture-dependent, such as multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. #NLP #AI #sentimentanalysis #machinelearning #evaluation #benchmark |\n\n\n\nfrom IPython.display import display, Markdown\n\n\nMarkdown(response)\n\n\n\n\n\n\n\n\n\n\nSummary\nTitle\nTweet\nLinkedIn Post\n\n\n\n\nThe paper presents a massively multilingual corpus of sentiment datasets for training sentiment models, consisting of 79 manually selected datasets from over 350 datasets reported in the scientific literature, covering 27 languages representing 6 language families, and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n🌍📊👥 A Massive Multilingual Corpus of Sentiment Datasets and Classification Benchmark\n1/3: 🌍📊👥 The paper presents a massively multilingual corpus of sentiment datasets for training sentiment models covering 27 languages and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments. #multilingual #sentimentanalysis #corpus\nThe paper presents a massively multilingual corpus of sentiment datasets for training sentiment models and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria, covering 27 languages representing 6 language families. The datasets can be queried using several linguistic and functional features. #multilingual #sentimentanalysis #corpus #benchmark\n\n\n2/3: 🤖💬 The corpus can be queried using several linguistic and functional features, making it a valuable resource for developing large-scale deployments of multilingual sentiment models. #NLP #AI #sentimentanalysis\n3/3: 📈🔍 The multi-faceted sentiment classification benchmark provides a comprehensive evaluation of different approaches to sentiment analysis, enabling researchers to compare and improve their models. #machinelearning #evaluation #benchmark\nThe corpus can be queried using several linguistic and functional features, making it a valuable resource for developing large-scale deployments of multilingual sentiment models. The multi-faceted sentiment classification benchmark provides a comprehensive evaluation of different approaches to sentiment analysis, enabling researchers to compare and improve their models. The paper highlights the challenges of developing large-scale deployments of multilingual models for language tasks that are culture-dependent, such as multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. #NLP #AI #sentimentanalysis #machinelearning #evaluation #benchmark\n\n\n\n\n\n\n\n## Inference as a trained model\n\n\ntweet = get_completion(\"Generate an example of a tweet with emojis that is funny and crippy.\")\n\n\ntweet\n\n'👻🕸️🎃 Just saw a spider crawl out of a pumpkin... Halloween is getting too spooky for me! #creepy #funny #halloween 🕷️👻🎃'\n\n\n\nprompt = f\"\"\"\nWhat is the sentiment of the following tweet, which is delimited with triple backticks?\n\nTweet text: '''{tweet}'''\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n\nAs an AI language model, I do not have the capability to determine the sentiment of a tweet with certainty. However, based on the use of emojis and the hashtags, it appears that the tweet is expressing a mixture of fear and humor towards the spooky nature of Halloween.\n\n\n\nprompt = f\"\"\"\nWhat is the sentiment of the following tweet, which is delimited with triple backticks?\n\nReturn a single word, either \"positive\", \"neutral\" or \"negative\".\n\nTweet text: '''{tweet}'''\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n\nneutral\n\n\n\nprompt = f\"\"\"\nWhat emojis did appear in the following tweet, which is delimited with triple backticks?\nTweet text: '''{tweet}'''\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n\n👻🕸️🎃 🕷️👻🎃\n\n\n\nMany models at the same time\n\nprompt = f\"\"\"\nWhat emojis, sentiment and emotions did appear in the following tweet, which is delimited with triple backticks?\nReturn a markown table with the following columns: tweet text, emojis, sentiment, emotions\nTweet text: '''{tweet}'''\n\"\"\"\nresponse = get_completion(prompt)\nMarkdown(response)\n\n\n\n\n\n\n\n\n\n\nTweet text\nEmojis\nSentiment\nEmotions\n\n\n\n\n👻🕸️🎃 Just saw a spider crawl out of a pumpkin… Halloween is getting too spooky for me! #creepy #funny #halloween 🕷️👻🎃\n👻🕸️🎃🕷️👻🎃\nNegative\nFear, Amusement\n\n\n\n\n\n\nPrompt content is more important and neutral sentiment suddently changed to negative…\n\nWhy?"
  },
  {
    "objectID": "00_llm_intro/intro_to_llms.html#customize-prompts",
    "href": "00_llm_intro/intro_to_llms.html#customize-prompts",
    "title": "Guidelines for Prompting",
    "section": "Customize prompts",
    "text": "Customize prompts\n\nformat_output = \"markdown table\"\n\n\ntext = f\"\"\"\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\"\n# example 1\nprompt_1 = f\"\"\"\nPerform the following actions for a research paper text: \n1 - Summarize the following text delimited by triple backticks with 1 sentence.\n2 - Generate a title for this summary with emojis.\n3 - Prepare a tweet thread with 3 tweets based on summary.\n4 - Prepare a longer linkedin post based on paper abstract. \n\nReturn a {format_output} with the following strcuture: summary, title, tweet, linkedin_post \n\nText:\n```{text}```\n\"\"\"\nresponse = get_completion(prompt_1)\nprint(response)\n\n| Summary | Title | Tweet | LinkedIn Post |\n| --- | --- | --- | --- |\n| This paper presents a massively multilingual corpus of sentiment datasets consisting of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria, covering 27 languages representing 6 language families, and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. | 🌍📊👍 A Massive Multilingual Sentiment Corpus and Classification Benchmark | 1/3: Check out this paper presenting a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark! 🌍📊👍 #sentimentanalysis #multilingual #corpus #classificationbenchmark | This paper presents a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark, which can be used to train sentiment models in various languages and evaluate their performance. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria, covering 27 languages representing 6 language families. The benchmark summarizes hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies, providing a comprehensive evaluation of the state-of-the-art in multilingual sentiment analysis. If you're interested in sentiment analysis, multilingual NLP, or corpus linguistics, this paper is a must-read! 🌍📊👍 #sentimentanalysis #multilingual #corpus #classificationbenchmark #naturallanguageprocessing #corpuslinguistics |\n\n\n\nimport json\n\n\nformat_output = \"json file\"\ntext = f\"\"\"\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\"\n# example 1\nprompt_1 = f\"\"\"\nPerform the following actions for a research paper text: \n1 - Summarize the following text delimited by triple backticks with 1 sentence.\n2 - Generate a title for this summary with emojis.\n3 - Prepare a tweet thread with 3 tweets based on summary.\n4 - Prepare a longer linkedin post based on paper abstract. \n\nReturn a {format_output} with the following strcuture: summary, title, tweet, linkedin_post \n\nText:\n```{text}```\n\"\"\"\nresponse = get_completion(prompt_1)\nsm = json.loads(response)\n\n\ntype(sm)\n\ndict\n\n\n\nsm[\"tweet\"]\n\n['📊🌎 This paper presents the most extensive open massively multilingual corpus of datasets for training sentiment models covering 27 languages representing 6 language families. #sentimentanalysis #multilingual',\n '💻🤖 The corpus can be queried using several linguistic and functional features. In addition, a multi-faceted sentiment classification benchmark is presented summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. #NLP',\n '🌍👥 Developing large-scale deployments of multilingual models still presents a significant challenge, but this paper is a step forward in the area of multilingual sentiment analysis. #AI #MachineLearning']"
  },
  {
    "objectID": "00_llm_intro/intro_to_llms.html#chatbot---our-own-chatgpt",
    "href": "00_llm_intro/intro_to_llms.html#chatbot---our-own-chatgpt",
    "title": "Guidelines for Prompting",
    "section": "Chatbot - our own ChatGPT",
    "text": "Chatbot - our own ChatGPT\n\nmessages =  [  \n{'role':'system', 'content':'You are an assistant that speaks like drum person.'},    \n{'role':'user', 'content':'tell me how can you go to the home'}\n]\n\n\nresponse = get_completion_from_messages(messages, temperature=1)\nprint(response)\n\nBOOM BOOM BOOM! To go home, you gotta take a step with your LEFT FOOT, then take another step with your RIGHT FOOT. BOOM BA DUM BA DUM! Repeat this process until you reach your desired location. BOOM BOOM BOOM! Simple as that!\n\n\n\nSummer Schhol AI Assistant\n\nimport panel as pn  # GUI\npn.extension()\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\ndef collect_messages(_):\n    prompt = inp.value_input\n    inp.value = ''\n    context.append({'role':'user', 'content':f\"{prompt}\"})\n    response = get_completion_from_messages(context) \n    context.append({'role':'assistant', 'content':f\"{response}\"})\n    panels.append(\n        pn.Row('User:', pn.pane.Markdown(prompt, width=600)))\n    panels.append(\n        pn.Row('Assistant:', pn.pane.Markdown(response, width=600, style={'background-color': '#F6F6F6'})))\n \n    return pn.Column(*panels)\n\n\npanels = [] # collect display \n\ncontext = [ {'role':'system', 'content':\"\"\"\nYou are Summer School AI Assistant, you help participant to choose the best workshop to attend. \n\nWorkshops:\nProwadzący  Dziedzina   Temat workshopu Abstract    Czy potrzebuję komputery dla uczestników?   Czy komputery są wybitnie konieczne?    Termin 1    Termin 2\nAndreas Zinonos SSL Self-supervised learning, part 1, Generative and Contrastive Learning               Sobota, 14.30-16.00 N/A\nAndreas Zinonos SSL Self-supervised learning, part 2, Bootstrap Your Own Latent (BYOL)              Sobota, 16.30-18.00 N/A\nBartosz Kolasa  MLOps   Systematizing a research code aka introduction to Kedro framework   During the workshops I would like to present the Kedro framework which is a MLOps tool to systematize any data science research project into a pipeline represented by a DAG (directed acyclic graph). Such an approach helps in creating more reproducible experiments that could be much more easily moved from your laptop to processing on a bigger cluster or in the cloud.    Własne laptopy powinny wystarczyć       Sobota, 14.30-16.00 N/A\nŁukasz Augustyniak  Prompt Engineering  Large Language Models - from Demo to Production \"In this interactive workshop, we will delve into the fascinating world of large language models and explore their potential in revolutionizing various industries. I will guide participants through the process of transforming cutting-edge demos into scalable production solutions.\n\nParticipants will gain hands-on experience by working on practical exercises that demonstrate how to fine-tune these models for specific tasks. Additionally, we'll cover best practices for deploying these models at scale while maintaining efficiency and performance.\n\nThroughout the workshop, attendees can expect engaging discussions about ethical considerations surrounding AI usage as well as insights into future developments within the field. By the end of this session, participants should have a solid understanding of how to harness the power of large language models effectively in order to drive innovation across various domains.\"   Polecam Nie Poniedziałek 9.00-10.30 Wtorek, 9.00-10.30\nArkadiusz Janz  Generative Language Models  Training Large Language Models with Reinforcement Learning from Human Feedback (RLHF)   A comprehensive introduction to Generative Language Models and Reinforcement Learning from Human Feedback: a novel approach in training Large Language Models for downstream tasks. This workshop is designed to impart an in-depth understanding of fundamental concepts of Reinforcement Learning (states, actions, rewards, value functions, policies) and Generative Language Models. A theoretical comparison with Supervised Learning paradigm will be discussed, along with the advantages RLHF optimization brings to reducing biases, and overcoming sparse reward issues. Participants will engage in hands-on activities involving RLHF training with simplified models, hyperparameter tuning of RLHF models, and diving into existing RLHF programming frameworks. Polecam, ale bez tego też się uda   Nie Poniedziałek 9.00-10.30 Poniedziałek 11:00-12:30\nKonrad Wojtasik Information Retrieval   Introduction to modern information retrieval    Information retrieval plays a crucial role in modern systems, finding applications across diverse domains and industries. Its relevance spans from web search and recommendation systems to product search and health and legal information retrieval. Information retrieval is not only essential for traditional search applications but also plays a vital role in retrieval-augmented Question Answering systems. Additionally, it serves as a valuable mechanism to prevent Large Language Models from generating incorrect or hallucinated information. Moreover, it ensures that their knowledge remains accurate and up-to-date. During this workshop, participants will have the opportunity to explore and understand current state-of-the-art models used in information retrieval. They will gain insights into the strengths and limitations of these models. Furthermore, the workshop will focus on setting up an information retrieval pipeline, allowing participants to gain hands-on experience in building and implementing such systems. Additionally, participants will learn how to effectively measure and evaluate the performance of their information retrieval pipelines.   Polecam Nie Sobota, 14.30-16.00 Sobota, 16.30-18.00\nMateusz Gniewkowski XAI Model Agnostic Explanations Techniques  \"Machine learning models can often be complex and difficult to understand, therefore it is important to be able to explain how these models work, as they are increasingly used in a wide range of industries and applications.\nThe workshop will start by discussing some basic ways to explain machine learning models, such as using feature importance measures, decision trees, and visualization tools. However, the focus will then shift to model-agnostic techniques, which can be applied to any type of machine learning model.\nThe techniques that will be covered in the workshop include LIME (Local Interpretable Model-Agnostic Explanations) and SHAP (SHapley Additive exPlanations). These libraries are designed to provide more transparent and understandable explanations for machine learning models, even when the models themselves are complex or difficult to interpret.\"  Tak Nie Poniedziałek, 14.30-16.00   Poniedziałek, 11.00-12.30\nPiotr Bielak    Representation learning Introduction to graph representation learning   In recent years, representation learning has attracted much attention both in the research community and industrial applications. Learning representations for graphs is especially challenging due to the relational nature of such data, i.e., one must reflect both the rich attribute space and graph structure in the embedding vectors. During this workshop, I will show how to use the PyTorch-Geometric library to easily build graph representations and solve a variety of applications. We will explore node, edge and graph-level representations through the prism of their associated downstream tasks and corresponding deep learning models (Graph Neural Networks).   Tak Nie Sobota, 14.30-16.00 Wtorek, 11.00-12.30\nDenis Janiak    Representation learning, Bayesian methods   Does Representation Know What It Doesn't Know?  \"Uncertainty estimation is a critical aspect of artificial intelligence systems, enabling them to quantify their confidence and provide reliable predictions. However, accurately assessing uncertainty becomes increasingly challenging when AI models encounter scenarios outside their training data distribution. This workshop, titled \"\"Does Representation Know What It Doesn't Know?,\"\" aims to explore the concept of uncertainty estimation in AI systems and delve into the question of whether representations within these systems possess the ability to recognize their own limitations. During the workshop, we will investigate the various techniques and methodologies employed in uncertainty estimation, such as Bayesian approaches and deep learning-based techniques. We will analyze the strengths and limitations of these approaches and discuss their implications for real-world applications.\nFurthermore, the workshop will delve into the concept of representation learning and its impact on uncertainty estimation. We will examine whether AI systems can effectively recognize when they are faced with novel or out-of-distribution inputs. Additionally, we will explore approaches to measure and improve representation awareness, enabling models to identify areas of uncertainty and seek further guidance or human intervention when necessary.\nBy the end of the workshop, attendees will gain a deeper understanding of the state-of-the-art techniques for uncertainty estimation and its importance in building robust AI systems. They will also gain insights into the fundamental question of whether representations within AI models possess the capability to identify areas of uncertainty and adapt accordingly. \"          Sobota, 16.30-18.00 Poniedziałek, 11.00-12.30\nAlbert Sawczyn  Representation learning Knowledge Graph Representation Learning Knowledge graphs have emerged as powerful tools for organizing and representing structured information in various domains, enabling efficient data integration, inference, and knowledge discovery. Knowledge graph representation learning aims to capture the rich semantic relationships and contextual information within knowledge graphs, facilitating effective knowledge inference and reasoning. This workshop aims to introduce the fundamental challenge of learning representations for knowledge graphs and highlight their significance in practical applications. Practical demonstrations will show how to easily learn representation using the PyKEEN library and how to apply it to a real-world NLP problem.    Własne laptopy powinny wystarczyć   nie Sobota, 16.30-18.00 Poniedziałek, 11.00-12.30\nJakub Binkowski Representation learning Generative models for graphs    After many advancements in the realm of Graph Representation Learning, graph generation gained much attention due to its vast range of applications (e.g. drug design). Nonetheless, due to the nature of graph data, this task is very difficult and further breakthroughs still need to be discovered. Hence the workshop will provide a ground understanding of the selected methods and problems associated with graph generation. During the workshop, I will show the most important methods in theory and practice. I will show how to implement these methods leveraging Pytorch Geometric library. We will go through training and evaluation using common datasets.   Tak Nie Sobota, 14.30-16.00 Poniedziałek, 9.00:10:30\nKamil Kanclerz  NLP, Personalization    Subjective problems in NLP  \"A unified gold standard commonly exploited in natural language processing (NLP) tasks requires high inter-annotator agreement. However, there are many subjective problems that should respect users’ individual points of view. At the first glance, disagreement and non-regular annotations can be seen as noise that drags the performance of NLP task detection models down. As we know, the ability to think and perceive the environment differently is natural to humans as such. Therefore, it is crucial to include this observation while building predictive models in order to reflect the setup close to reality. As simple as this may seem, it is important to keep in mind that the key ideas behind NLP phenomenon detection, such as gold standard, agreement coefficients, or the evaluation itself need to be thoroughly analyzed and reconsidered especially for subjective NLP tasks like hate speech detection, prediction of emotional elicitation, sense of humor, sarcasm detection, or even sentiment analysis. Such NLP tasks come with each complexity of their own, especially within the aspect of subjectivity, therefore making them difficult to solve compared to non-subjective tasks.\n\nDuring the workshop, the participants will be introduced to the novel deep neural architectures leveraging various user representations. Moreover, the user-centered data setups will be explained in comparison to their ground truth equivalents. Additionally, the personalized evaluation techniques will be presented as the methods providing further insight into model ability to understand differences between various user perspectives.\"    Tak Nie Poniedziałek, 14.30-16.00   Wtorek, 9.00-10.30\nMateusz Wójcik  MLOps, continual learning   Continual Learning - techniques and applications    \"Recently, neural architectures have become effective and widely used in various domains. The parameter optimization process based on gradient descent works well when the data set is sufficiently large and fully available during the training process. But what if we don’t have all the data available during training? What if the number of classes increase? As a result, we have to manually retrain the models from scratch ensuing a time-consuming process.\n\nDuring this workshop you will learn about the Continual Learning and its applications. We will discuss the catastrophic forgetting and explore various techniques that trying to prevent it starting from simple neural networks up to modern LLMs. As a result, you will understand why we need Continual Learning and how to apply it to existing or new models.\" Własne laptopy powinny wystarczyć   Nie Poniedziałek, 14.30-16.00   Wtorek, 9.00-10.30\nPatryk Wielopolski  Generative Models   Conditional object generation using pre-trained models and plug-in networks Generative models have gained many Machine Learning practitioners’ attention in the last years resulting in models such as StyleGAN for human face generation or PointFlow for the 3D point cloud generation. However, by default, we cannot control its sampling process, i.e., we cannot generate a sample with a specific set of attributes. The current approach is model retraining with additional inputs and different architecture, which requires time and computational resources. During this hands-on workshop we will go through a method which enables to generate objects with a given set of attributes without retraining the base model. For this purpose, we will utilize the normalizing flow models - Conditional Masked Autoregressive Flow and Conditional Real NVP, and plug-in networks resulting in the Flow Plugin Network.  Własne laptopy powinny wystarczyć       Sobota, 14.30-16.00 Poniedziałek, 14.30-16.00\nMichał Czuba    Network Science Complex networks part II - spreading processes  Two years ago, the world faced SARS-CoV-2 and the biggest pandemic in the century. Since last winter, with an incursion of Russian troops in Ukraine, all civilised countries have been subjected to misinformation. This year with an election in Poland, a festival of campaign promises has started. The nature of these three examples is complex and hard to analyse. Nonetheless, one of the approaches leading to understanding and controlling such processes is a network simulation. During this workshop, you will learn an essential toolkit to model and analyse spreading phenomena in complex networks. You will understand how to simulate such processes as epidemics or opinion dynamics and how to identify key spreaders of fake news or the most fragile individuals to be vaccinated in the first place.  Tak Nie Poniedziałek 9.00-10.30 Poniedziałek, 14.30-16.00\nMateusz Nurek   Network Science Complex networks part I - social network analysis   Computational network science is a field of artificial intelligence that analyses graphs in applied problems involving social, transportation, epidemiological or energy issues. This workshop will teach you fundamental tools and techniques for analysing this data type. Based on a case study - the history of communication in a particular company, we will solve the problem of optimising the structure of its organisation. We will detect natural teams from employees most intensively working together. We will also identify key personnel, i.e. employees whose loss can cause communication paralysis.          Sobota, 16.30-18.00 Wtorek, 11.00-12.30\nDamian Serwata  Network Science \"Complex networks I - social network analysis\nComplex networks II - spreading processes\"      Tak Nie Poniedziałek, 9.00-10.30    Wtorek, 9.00-10.30\nMichał Karol    ML w medycynie  Computer Vision for medical image processing    Computer vision has emerged as a revolutionary technology in the medical field, bringing significant transformations in various aspects of healthcare. Its application in clinical practice has paved the way for improved diagnostics, more accurate disease detection, and enhanced treatment planning. The objective of this workshop is to bring comprehensive understanding of the impact of computer vision in clinical practice. Participants will gain insights into how this technology is reshaping healthcare and improving patient outcomes. By exploring the latest advancements in certified medical systems, attendees will learn about the integration of computer vision into existing medical frameworks and protocols. Moreover, the workshop will delve into current research areas within computer vision in medicine. Participants will be introduced to cutting-edge studies and ongoing projects that aim to further enhance the capabilities of computer vision in the healthcare domain. In the second part of the workshop, there will be an interactive session focused on implementing classification and segmentation networks using the JAX framework and the Flax library.  Tak Nie Poniedziałek, 14.30-16.00   Wtorek, 11.00-12.30\nrt Czechowski   Cyberbezpieczeństwo Informatyka śledcza – wybrane zagadnienia i narzędzia kryminalistyki cyfrowej   \"Informatyka śledcza pod kątem procesu analizy jest wyjątkowa pod każdym względem. Oprócz wiedzy teoretycznej i umiejętności praktycznych wymagana jest spora wyobraźnia i umiejętność nieszablonowego podejścia do każdej analizowanej sprawy. Głównym celem informatyki śledczej oprócz dostarczenia cyfrowych materiałów dowodowych umożliwiających potwierdzenie lub zaprzeczenie, iż dane zdarzenie miało miejsce, jest również przedstawienie scenariusza i toku postępowania w danej sprawie (najczęściej przygotowawczej lub postępowania sądowego). Głównymi celami informatyków śledczych jest ujawnienie i rekonstrukcja zdarzeń mających charakter kryminalny, prowadzących do zakłócenia innych legalnych działań cyfrowych lub coraz częściej – cyfrowych przestępstw.\n\"\"\"} ]  # accumulate messages\n\n\ninp = pn.widgets.TextInput(value=\"Hi\", placeholder='Enter text here…')\nbutton_conversation = pn.widgets.Button(name=\"Chat!\")\n\ninteractive_conversation = pn.bind(collect_messages, button_conversation)\n\ndashboard = pn.Column(\n    inp,\n    pn.Row(button_conversation),\n    pn.panel(interactive_conversation, loading_indicator=True, height=300),\n)\n\ndashboard\n\n/tmp/ipykernel_3595576/1263700703.py:11: PanelDeprecationWarning: 'style' is deprecated and will be removed in version 1.1, use 'styles' instead.\n  pn.Row('Assistant:', pn.pane.Markdown(response, width=600, style={'background-color': '#F6F6F6'})))\n\n\n\nTraceback (most recent call last):\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/pyviz_comms/__init__.py\", line 340, in _handle_msg\n    self._on_msg(msg)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/viewable.py\", line 465, in _on_msg\n    patch.apply_to_document(doc, comm.id if comm else None)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/protocol/messages/patch_doc.py\", line 104, in apply_to_document\n    invoke_with_curdoc(doc, lambda: doc.apply_json_patch(self.payload, setter=setter))\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/callbacks.py\", line 443, in invoke_with_curdoc\n    return f()\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/protocol/messages/patch_doc.py\", line 104, in &lt;lambda&gt;\n    invoke_with_curdoc(doc, lambda: doc.apply_json_patch(self.payload, setter=setter))\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/document.py\", line 376, in apply_json_patch\n    DocumentPatchedEvent.handle_event(self, event, setter)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/events.py\", line 246, in handle_event\n    event_cls._handle_event(doc, event)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/events.py\", line 281, in _handle_event\n    cb(event.msg_data)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/callbacks.py\", line 390, in trigger_event\n    model._trigger_event(event)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/util/callback_manager.py\", line 113, in _trigger_event\n    self.document.callbacks.notify_event(cast(Model, self), event, invoke)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/callbacks.py\", line 260, in notify_event\n    invoke_with_curdoc(doc, callback_invoker)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/callbacks.py\", line 443, in invoke_with_curdoc\n    return f()\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/util/callback_manager.py\", line 109, in invoke\n    cast(EventCallbackWithEvent, callback)(event)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/reactive.py\", line 479, in _comm_event\n    state._handle_exception(e)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/io/state.py\", line 432, in _handle_exception\n    raise exception\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/reactive.py\", line 477, in _comm_event\n    self._process_bokeh_event(doc, event)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/reactive.py\", line 414, in _process_bokeh_event\n    self._process_event(event)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/widgets/button.py\", line 242, in _process_event\n    self.param.trigger('value')\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 1993, in trigger\n    self_.set_param(**dict(params, **triggers))\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 1929, in set_param\n    return self_.update(kwargs)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 1902, in update\n    self_._batch_call_watchers()\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 2063, in _batch_call_watchers\n    self_._execute_watcher(watcher, events)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 2025, in _execute_watcher\n    watcher.fn(*args, **kwargs)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/param.py\", line 840, in _replace_pane\n    new_object = self.eval(self.object)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/param.py\", line 806, in eval\n    return eval_function(function)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/util/__init__.py\", line 325, in eval_function\n    return function(*args, **kwargs)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 407, in _depends\n    return func(*args, **kw)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/depends.py\", line 249, in wrapped\n    return eval_fn()(*combined_args, **combined_kwargs)\n  File \"/tmp/ipykernel_3595576/1263700703.py\", line 6, in collect_messages\n    response = get_completion_from_messages(context)\n  File \"/tmp/ipykernel_3595576/1432808580.py\", line 12, in get_completion_from_messages\n    response = openai.ChatCompletion.create(\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/openai/api_resources/chat_completion.py\", line 25, in create\n    return super().create(*args, **kwargs)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 153, in create\n    response, _, api_key = requestor.request(\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/openai/api_requestor.py\", line 298, in request\n    resp, got_stream = self._interpret_response(result, stream)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/openai/api_requestor.py\", line 700, in _interpret_response\n    self._interpret_response_line(\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/openai/api_requestor.py\", line 763, in _interpret_response_line\n    raise self.handle_error_response(\nopenai.error.InvalidRequestError: This model's maximum context length is 4097 tokens. However, your messages resulted in 4500 tokens. Please reduce the length of the messages.\n\n\n\nTraceback (most recent call last):\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/pyviz_comms/__init__.py\", line 340, in _handle_msg\n    self._on_msg(msg)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/viewable.py\", line 465, in _on_msg\n    patch.apply_to_document(doc, comm.id if comm else None)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/protocol/messages/patch_doc.py\", line 104, in apply_to_document\n    invoke_with_curdoc(doc, lambda: doc.apply_json_patch(self.payload, setter=setter))\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/callbacks.py\", line 443, in invoke_with_curdoc\n    return f()\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/protocol/messages/patch_doc.py\", line 104, in &lt;lambda&gt;\n    invoke_with_curdoc(doc, lambda: doc.apply_json_patch(self.payload, setter=setter))\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/document.py\", line 376, in apply_json_patch\n    DocumentPatchedEvent.handle_event(self, event, setter)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/events.py\", line 246, in handle_event\n    event_cls._handle_event(doc, event)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/events.py\", line 281, in _handle_event\n    cb(event.msg_data)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/callbacks.py\", line 390, in trigger_event\n    model._trigger_event(event)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/util/callback_manager.py\", line 113, in _trigger_event\n    self.document.callbacks.notify_event(cast(Model, self), event, invoke)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/callbacks.py\", line 260, in notify_event\n    invoke_with_curdoc(doc, callback_invoker)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/document/callbacks.py\", line 443, in invoke_with_curdoc\n    return f()\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/bokeh/util/callback_manager.py\", line 109, in invoke\n    cast(EventCallbackWithEvent, callback)(event)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/reactive.py\", line 479, in _comm_event\n    state._handle_exception(e)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/io/state.py\", line 432, in _handle_exception\n    raise exception\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/reactive.py\", line 477, in _comm_event\n    self._process_bokeh_event(doc, event)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/reactive.py\", line 414, in _process_bokeh_event\n    self._process_event(event)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/widgets/button.py\", line 242, in _process_event\n    self.param.trigger('value')\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 1993, in trigger\n    self_.set_param(**dict(params, **triggers))\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 1929, in set_param\n    return self_.update(kwargs)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 1902, in update\n    self_._batch_call_watchers()\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 2063, in _batch_call_watchers\n    self_._execute_watcher(watcher, events)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 2025, in _execute_watcher\n    watcher.fn(*args, **kwargs)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/param.py\", line 840, in _replace_pane\n    new_object = self.eval(self.object)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/param.py\", line 806, in eval\n    return eval_function(function)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/util/__init__.py\", line 325, in eval_function\n    return function(*args, **kwargs)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/param/parameterized.py\", line 407, in _depends\n    return func(*args, **kw)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/panel/depends.py\", line 249, in wrapped\n    return eval_fn()(*combined_args, **combined_kwargs)\n  File \"/tmp/ipykernel_3595576/1263700703.py\", line 6, in collect_messages\n    response = get_completion_from_messages(context)\n  File \"/tmp/ipykernel_3595576/1432808580.py\", line 12, in get_completion_from_messages\n    response = openai.ChatCompletion.create(\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/openai/api_resources/chat_completion.py\", line 25, in create\n    return super().create(*args, **kwargs)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 153, in create\n    response, _, api_key = requestor.request(\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/openai/api_requestor.py\", line 298, in request\n    resp, got_stream = self._interpret_response(result, stream)\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/openai/api_requestor.py\", line 700, in _interpret_response\n    self._interpret_response_line(\n  File \"/home/laugustyniak/miniconda3/envs/LLM-demo-2-production/lib/python3.9/site-packages/openai/api_requestor.py\", line 763, in _interpret_response_line\n    raise self.handle_error_response(\nopenai.error.InvalidRequestError: This model's maximum context length is 4097 tokens. However, your messages resulted in 4903 tokens. Please reduce the length of the messages."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LLM-demo-2-production",
    "section": "",
    "text": "imgs/lukasz_robot_scrapping_websites_and_builind_a_dataset_38401eac-e2ab-4faa-96ef-bf6696a9b235.png"
  },
  {
    "objectID": "index.html#goal",
    "href": "index.html#goal",
    "title": "LLM-demo-2-production",
    "section": "Goal",
    "text": "Goal\nIn this interactive workshop, we will delve into the fascinating world of large language models and explore their potential in revolutionizing various industries. I will guide participants through the process of transforming cutting-edge demos into scalable production solutions.\nParticipants will gain hands-on experience by working on practical exercises that demonstrate how to fine-tune these models for specific tasks. Additionally, we’ll cover best practices for deploying these models at scale while maintaining efficiency and performance.\nThroughout the workshop, attendees can expect engaging discussions about ethical considerations surrounding AI usage as well as insights into future developments within the field. By the end of this session, participants should have a solid understanding of how to harness the power of large language models effectively in order to drive innovation across various domains."
  },
  {
    "objectID": "00_llm_intro/intro_to_langchain.html",
    "href": "00_llm_intro/intro_to_langchain.html",
    "title": "Guidelines for Prompting in Langchain",
    "section": "",
    "text": "If you use google colab please install the following packages:\npip install \"langchain&gt;=0.0.200\" \"pandas&gt;=1.5.3\" \"panel&gt;=1.1.0\" \"tiktoken&gt;=0.3.3\"\n\nimport json\n\nfrom langchain.chat_models import ChatOpenAI\n\n\nchat = ChatOpenAI(\n    # model=\"gpt-3.5-turbo-0613\",\n    model=\"gpt-4\",\n    temperature=0.0,\n    # openai_api_key=\"sk-&lt;your key here&gt;\"  # uncomment to use your own API key, othewise uses default .env key\n)\n\n\nfrom langchain.prompts import ChatPromptTemplate\n\n\npaper_info = \"\"\"\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\"\n\ntemplate_string = \"\"\"\nPerform the following actions for a research paper text: \n1 - Summarize the following text delimited by triple backticks with 1 sentence.\n2 - Generate a title for this summary with emojis.\n3 - Prepare a tweet thread with 3 tweets based on summary.\n4 - Prepare a longer linkedin post based on paper abstract. \n\nReturn a {format_output} with the following strcuture: summary, title, tweet, linkedin_post \n\nText:\n```{text}```\n\"\"\"\n\n\nprompt_template = ChatPromptTemplate.from_template(template_string)\n\n\nprompt_template\n\nChatPromptTemplate(input_variables=['text', 'format_output'], output_parser=None, partial_variables={}, messages=[HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['format_output', 'text'], output_parser=None, partial_variables={}, template='\\nPerform the following actions for a research paper text: \\n1 - Summarize the following text delimited by triple backticks with 1 sentence.\\n2 - Generate a title for this summary with emojis.\\n3 - Prepare a tweet thread with 3 tweets based on summary.\\n4 - Prepare a longer linkedin post based on paper abstract. \\n\\nReturn a {format_output} with the following strcuture: summary, title, tweet, linkedin_post \\n\\nText:\\n```{text}```\\n', template_format='f-string', validate_template=True), additional_kwargs={})])\n\n\n\nprompt_template.input_variables\n\n['text', 'format_output']\n\n\n\nprompt_template.messages[0]\n\nHumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['format_output', 'text'], output_parser=None, partial_variables={}, template='\\nPerform the following actions for a research paper text: \\n1 - Summarize the following text delimited by triple backticks with 1 sentence.\\n2 - Generate a title for this summary with emojis.\\n3 - Prepare a tweet thread with 3 tweets based on summary.\\n4 - Prepare a longer linkedin post based on paper abstract. \\n\\nReturn a {format_output} with the following strcuture: summary, title, tweet, linkedin_post \\n\\nText:\\n```{text}```\\n', template_format='f-string', validate_template=True), additional_kwargs={})\n\n\n\nprompt_template.messages[0].prompt.input_variables\n\n['format_output', 'text']\n\n\n\npaper_messages = prompt_template.format_messages(\n    text=paper_info,  # text to be summarized\n    format_output='python dict'  # format of output to be returned from LLM\n)\n\n\npaper_messages\n\n[HumanMessage(content='\\nPerform the following actions for a research paper text: \\n1 - Summarize the following text delimited by triple backticks with 1 sentence.\\n2 - Generate a title for this summary with emojis.\\n3 - Prepare a tweet thread with 3 tweets based on summary.\\n4 - Prepare a longer linkedin post based on paper abstract. \\n\\nReturn a python dict with the following strcuture: summary, title, tweet, linkedin_post \\n\\nText:\\n```\\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\\n```\\n', additional_kwargs={}, example=False)]\n\n\n\nprint(type(paper_messages))\nprint(type(paper_messages[0]))\n\n&lt;class 'list'&gt;\n&lt;class 'langchain.schema.HumanMessage'&gt;\n\n\nLet’s make a first call to the API to check if everything is working.\n\npaper_social_media_summary = chat(paper_messages)\n\nWe got not a raw string but an object from langchain.\n\npaper_social_media_summary\n\nAIMessage(content='{\\n  \"summary\": \"This research paper presents a massive multilingual corpus of sentiment datasets and a sentiment classification benchmark, covering 27 languages and 6 language families.\",\\n  \"title\": \"🌍📚 Massively Multilingual Sentiment Analysis Corpus & Benchmark 📈🌐\",\\n  \"tweet\": [\\n    \"🚀 Exciting new research presents a massive multilingual corpus of sentiment datasets, covering 27 languages and 6 language families! 🌍📚 #NLP #SentimentAnalysis\",\\n    \"🔍 The corpus consists of 79 manually selected datasets from over 350 reported in scientific literature, based on strict quality criteria. 📊🧪 #DataScience #Multilingual\",\\n    \"💡 Additionally, the paper introduces a multi-faceted sentiment classification benchmark, summarizing hundreds of experiments on different models, objectives, and strategies. 📈🌐 #MachineLearning #Benchmark\"\\n  ],\\n  \"linkedin_post\": \"🌍📚 Massively Multilingual Sentiment Analysis Corpus & Benchmark 📈🌐\\\\n\\\\nA new research paper has been published, presenting the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus covers 27 languages representing 6 language families and consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. This is a significant advancement in the field of multilingual sentiment analysis, which is often challenged by culture-dependent language tasks.\\\\n\\\\nIn addition to the corpus, the researchers also present a multi-faceted sentiment classification benchmark, summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. This benchmark will serve as a valuable resource for researchers and practitioners working on multilingual sentiment analysis and natural language processing.\\\\n\\\\nRead the full paper here: [link to the paper]\"\\n}', additional_kwargs={}, example=False)\n\n\n\npaper_social_media_summary.content\n\n'Summary: 🌍📊 This paper presents a massively multilingual corpus of sentiment datasets consisting of 79 manually selected datasets from over 350 reported in scientific literature, covering 27 languages and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\\n\\nTitle: 🌍📊 Massively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\\n\\nTweet 1: 🌍📊 This paper presents a massively multilingual corpus of sentiment datasets covering 27 languages and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. #sentimentanalysis #multilingual\\n\\nTweet 2: 📊 The corpus consists of 79 manually selected datasets from over 350 reported in scientific literature based on strict quality criteria, and datasets can be queried using several linguistic and functional features. #naturallanguageprocessing #datasets\\n\\nTweet 3: 🌍📈 The multi-faceted sentiment classification benchmark presented in this paper can be used to evaluate the performance of different sentiment analysis models and fine-tuning strategies. #machinelearning #benchmarking\\n\\nLinkedin Post: \\nThis paper presents a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark, which can be used to evaluate the performance of different sentiment analysis models and fine-tuning strategies. The corpus consists of 79 manually selected datasets from over 350 reported in scientific literature based on strict quality criteria, covering 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. The multi-faceted sentiment classification benchmark summarizes hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. This work is a significant contribution to the development of large-scale deployments of multilingual sentiment models, which still presents a significant challenge due to the culture-dependent nature of language tasks such as sentiment analysis. #sentimentanalysis #multilingual #naturallanguageprocessing #machinelearning #benchmarking'\n\n\n\nchat(prompt_template.format_messages(\n    text=paper_info,\n    format_output='markdown table'\n))\n\nAIMessage(content='| Summary | Title | Tweet | LinkedIn Post |\\n| --- | --- | --- | --- |\\n| This paper presents a massively multilingual corpus of sentiment datasets consisting of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria, covering 27 languages representing 6 language families, and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. | 🌎📊👍 A Massive Multilingual Sentiment Corpus and Classification Benchmark | 1/3: Check out this paper presenting a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark! 🌎📊👍 #multilingual #sentimentanalysis #corpus #classificationbenchmark | This paper presents a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark, which can be useful for developing large-scale deployments of multilingual models, particularly for language tasks that are culture-dependent, such as multilingual sentiment analysis. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria, covering 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. The multi-faceted sentiment classification benchmark summarizes hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies, providing a comprehensive evaluation of the state-of-the-art in multilingual sentiment analysis. 🌎📊👍 #multilingual #sentimentanalysis #corpus #classificationbenchmark |\\n| 2/3: The corpus covers 27 languages representing 6 language families and can be queried using several linguistic and functional features. 🌎📊👍 #multilingual #sentimentanalysis #corpus #classificationbenchmark | 3/3: The multi-faceted sentiment classification benchmark provides a comprehensive evaluation of the state-of-the-art in multilingual sentiment analysis. 🌎📊👍 #multilingual #sentimentanalysis #corpus #classificationbenchmark | This paper presents a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark, which can be useful for developing large-scale deployments of multilingual models, particularly for language tasks that are culture-dependent, such as multilingual sentiment analysis. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria, covering 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. The multi-faceted sentiment classification benchmark summarizes hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies, providing a comprehensive evaluation of the state-of-the-art in multilingual sentiment analysis. The corpus covers 27 languages representing 6 language families and can be queried using several linguistic and functional features. The multi-faceted sentiment classification benchmark provides a comprehensive evaluation of the state-of-the-art in multilingual sentiment analysis. 🌎📊👍 #multilingual #sentimentanalysis #corpus #classificationbenchmark |', additional_kwargs={}, example=False)"
  },
  {
    "objectID": "00_llm_intro/intro_to_langchain.html#setup",
    "href": "00_llm_intro/intro_to_langchain.html#setup",
    "title": "Guidelines for Prompting in Langchain",
    "section": "",
    "text": "If you use google colab please install the following packages:\npip install \"langchain&gt;=0.0.200\" \"pandas&gt;=1.5.3\" \"panel&gt;=1.1.0\" \"tiktoken&gt;=0.3.3\"\n\nimport json\n\nfrom langchain.chat_models import ChatOpenAI\n\n\nchat = ChatOpenAI(\n    # model=\"gpt-3.5-turbo-0613\",\n    model=\"gpt-4\",\n    temperature=0.0,\n    # openai_api_key=\"sk-&lt;your key here&gt;\"  # uncomment to use your own API key, othewise uses default .env key\n)\n\n\nfrom langchain.prompts import ChatPromptTemplate\n\n\npaper_info = \"\"\"\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\"\n\ntemplate_string = \"\"\"\nPerform the following actions for a research paper text: \n1 - Summarize the following text delimited by triple backticks with 1 sentence.\n2 - Generate a title for this summary with emojis.\n3 - Prepare a tweet thread with 3 tweets based on summary.\n4 - Prepare a longer linkedin post based on paper abstract. \n\nReturn a {format_output} with the following strcuture: summary, title, tweet, linkedin_post \n\nText:\n```{text}```\n\"\"\"\n\n\nprompt_template = ChatPromptTemplate.from_template(template_string)\n\n\nprompt_template\n\nChatPromptTemplate(input_variables=['text', 'format_output'], output_parser=None, partial_variables={}, messages=[HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['format_output', 'text'], output_parser=None, partial_variables={}, template='\\nPerform the following actions for a research paper text: \\n1 - Summarize the following text delimited by triple backticks with 1 sentence.\\n2 - Generate a title for this summary with emojis.\\n3 - Prepare a tweet thread with 3 tweets based on summary.\\n4 - Prepare a longer linkedin post based on paper abstract. \\n\\nReturn a {format_output} with the following strcuture: summary, title, tweet, linkedin_post \\n\\nText:\\n```{text}```\\n', template_format='f-string', validate_template=True), additional_kwargs={})])\n\n\n\nprompt_template.input_variables\n\n['text', 'format_output']\n\n\n\nprompt_template.messages[0]\n\nHumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['format_output', 'text'], output_parser=None, partial_variables={}, template='\\nPerform the following actions for a research paper text: \\n1 - Summarize the following text delimited by triple backticks with 1 sentence.\\n2 - Generate a title for this summary with emojis.\\n3 - Prepare a tweet thread with 3 tweets based on summary.\\n4 - Prepare a longer linkedin post based on paper abstract. \\n\\nReturn a {format_output} with the following strcuture: summary, title, tweet, linkedin_post \\n\\nText:\\n```{text}```\\n', template_format='f-string', validate_template=True), additional_kwargs={})\n\n\n\nprompt_template.messages[0].prompt.input_variables\n\n['format_output', 'text']\n\n\n\npaper_messages = prompt_template.format_messages(\n    text=paper_info,  # text to be summarized\n    format_output='python dict'  # format of output to be returned from LLM\n)\n\n\npaper_messages\n\n[HumanMessage(content='\\nPerform the following actions for a research paper text: \\n1 - Summarize the following text delimited by triple backticks with 1 sentence.\\n2 - Generate a title for this summary with emojis.\\n3 - Prepare a tweet thread with 3 tweets based on summary.\\n4 - Prepare a longer linkedin post based on paper abstract. \\n\\nReturn a python dict with the following strcuture: summary, title, tweet, linkedin_post \\n\\nText:\\n```\\nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\\n```\\n', additional_kwargs={}, example=False)]\n\n\n\nprint(type(paper_messages))\nprint(type(paper_messages[0]))\n\n&lt;class 'list'&gt;\n&lt;class 'langchain.schema.HumanMessage'&gt;\n\n\nLet’s make a first call to the API to check if everything is working.\n\npaper_social_media_summary = chat(paper_messages)\n\nWe got not a raw string but an object from langchain.\n\npaper_social_media_summary\n\nAIMessage(content='{\\n  \"summary\": \"This research paper presents a massive multilingual corpus of sentiment datasets and a sentiment classification benchmark, covering 27 languages and 6 language families.\",\\n  \"title\": \"🌍📚 Massively Multilingual Sentiment Analysis Corpus & Benchmark 📈🌐\",\\n  \"tweet\": [\\n    \"🚀 Exciting new research presents a massive multilingual corpus of sentiment datasets, covering 27 languages and 6 language families! 🌍📚 #NLP #SentimentAnalysis\",\\n    \"🔍 The corpus consists of 79 manually selected datasets from over 350 reported in scientific literature, based on strict quality criteria. 📊🧪 #DataScience #Multilingual\",\\n    \"💡 Additionally, the paper introduces a multi-faceted sentiment classification benchmark, summarizing hundreds of experiments on different models, objectives, and strategies. 📈🌐 #MachineLearning #Benchmark\"\\n  ],\\n  \"linkedin_post\": \"🌍📚 Massively Multilingual Sentiment Analysis Corpus & Benchmark 📈🌐\\\\n\\\\nA new research paper has been published, presenting the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus covers 27 languages representing 6 language families and consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. This is a significant advancement in the field of multilingual sentiment analysis, which is often challenged by culture-dependent language tasks.\\\\n\\\\nIn addition to the corpus, the researchers also present a multi-faceted sentiment classification benchmark, summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. This benchmark will serve as a valuable resource for researchers and practitioners working on multilingual sentiment analysis and natural language processing.\\\\n\\\\nRead the full paper here: [link to the paper]\"\\n}', additional_kwargs={}, example=False)\n\n\n\npaper_social_media_summary.content\n\n'Summary: 🌍📊 This paper presents a massively multilingual corpus of sentiment datasets consisting of 79 manually selected datasets from over 350 reported in scientific literature, covering 27 languages and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\\n\\nTitle: 🌍📊 Massively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\\n\\nTweet 1: 🌍📊 This paper presents a massively multilingual corpus of sentiment datasets covering 27 languages and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. #sentimentanalysis #multilingual\\n\\nTweet 2: 📊 The corpus consists of 79 manually selected datasets from over 350 reported in scientific literature based on strict quality criteria, and datasets can be queried using several linguistic and functional features. #naturallanguageprocessing #datasets\\n\\nTweet 3: 🌍📈 The multi-faceted sentiment classification benchmark presented in this paper can be used to evaluate the performance of different sentiment analysis models and fine-tuning strategies. #machinelearning #benchmarking\\n\\nLinkedin Post: \\nThis paper presents a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark, which can be used to evaluate the performance of different sentiment analysis models and fine-tuning strategies. The corpus consists of 79 manually selected datasets from over 350 reported in scientific literature based on strict quality criteria, covering 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. The multi-faceted sentiment classification benchmark summarizes hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. This work is a significant contribution to the development of large-scale deployments of multilingual sentiment models, which still presents a significant challenge due to the culture-dependent nature of language tasks such as sentiment analysis. #sentimentanalysis #multilingual #naturallanguageprocessing #machinelearning #benchmarking'\n\n\n\nchat(prompt_template.format_messages(\n    text=paper_info,\n    format_output='markdown table'\n))\n\nAIMessage(content='| Summary | Title | Tweet | LinkedIn Post |\\n| --- | --- | --- | --- |\\n| This paper presents a massively multilingual corpus of sentiment datasets consisting of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria, covering 27 languages representing 6 language families, and a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies. | 🌎📊👍 A Massive Multilingual Sentiment Corpus and Classification Benchmark | 1/3: Check out this paper presenting a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark! 🌎📊👍 #multilingual #sentimentanalysis #corpus #classificationbenchmark | This paper presents a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark, which can be useful for developing large-scale deployments of multilingual models, particularly for language tasks that are culture-dependent, such as multilingual sentiment analysis. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria, covering 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. The multi-faceted sentiment classification benchmark summarizes hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies, providing a comprehensive evaluation of the state-of-the-art in multilingual sentiment analysis. 🌎📊👍 #multilingual #sentimentanalysis #corpus #classificationbenchmark |\\n| 2/3: The corpus covers 27 languages representing 6 language families and can be queried using several linguistic and functional features. 🌎📊👍 #multilingual #sentimentanalysis #corpus #classificationbenchmark | 3/3: The multi-faceted sentiment classification benchmark provides a comprehensive evaluation of the state-of-the-art in multilingual sentiment analysis. 🌎📊👍 #multilingual #sentimentanalysis #corpus #classificationbenchmark | This paper presents a massively multilingual corpus of sentiment datasets and a multi-faceted sentiment classification benchmark, which can be useful for developing large-scale deployments of multilingual models, particularly for language tasks that are culture-dependent, such as multilingual sentiment analysis. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria, covering 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. The multi-faceted sentiment classification benchmark summarizes hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies, providing a comprehensive evaluation of the state-of-the-art in multilingual sentiment analysis. The corpus covers 27 languages representing 6 language families and can be queried using several linguistic and functional features. The multi-faceted sentiment classification benchmark provides a comprehensive evaluation of the state-of-the-art in multilingual sentiment analysis. 🌎📊👍 #multilingual #sentimentanalysis #corpus #classificationbenchmark |', additional_kwargs={}, example=False)"
  },
  {
    "objectID": "00_llm_intro/intro_to_langchain.html#chains",
    "href": "00_llm_intro/intro_to_langchain.html#chains",
    "title": "Guidelines for Prompting in Langchain",
    "section": "Chains",
    "text": "Chains\n\nimport asyncio\n\nfrom langchain.llms import OpenAI\nfrom langchain.prompts import PromptTemplate\nfrom langchain.chains import LLMChain\n\n\ntext = \"\"\"\nUS and Canadian search teams are racing against time to find a tourist submarine that went missing during a dive to the Titanic's wreck on Sunday.\n\nFive people were onboard when contact with the small sub was lost about an hour and 45 minutes into its dive.\n\nThe rescue operation is continuing overnight in the mid-Atlantic but there has been no sign so far of the vessel.\n\nGovernment agencies, both countries' navies and commercial deep-sea firms are all helping the rescue operation.\n\"\"\"\n\ndo_whats = [\"summarize\", \"extract NERs\", \"extract keywords\", \"extract key sentences\", \"extract random words starting with 's'\"]\n\nprompt = PromptTemplate(\n    input_variables=[\"do_what\", \"text\"],\n    template=\"Please {do_what} the following text: {text}\",\n)\n\n\nllm = OpenAI(temperature=0.9)\nchain = LLMChain(llm=llm, prompt=prompt, verbose=True)\n\n\n# llm\n\n\n# chain\n\n\nprint(chain.run(do_what=\"extract ner\", text=text))\n\n\n\n&gt; Entering new  chain...\nPrompt after formatting:\nPlease extract ner the following text: \nUS and Canadian search teams are racing against time to find a tourist submarine that went missing during a dive to the Titanic's wreck on Sunday.\n\nFive people were onboard when contact with the small sub was lost about an hour and 45 minutes into its dive.\n\nThe rescue operation is continuing overnight in the mid-Atlantic but there has been no sign so far of the vessel.\n\nGovernment agencies, both countries' navies and commercial deep-sea firms are all helping the rescue operation.\n\n\n&gt; Finished chain.\n\nPerson: Five people \nOrganization: US, Canadian, navies, commercial deep-sea firms \nLocation: mid-Atlantic\n\n\n\nfor do_what in do_whats:\n    print(f\"Doing {do_what}...\")\n    print(chain.run(do_what=do_what, text=text))\n    print(\"*\"*100)\n\nDoing summarize...\n\nUS and Canadian search teams are working urgently to find a tourist submarine that went missing during a dive near the Titanic's wreck site on Sunday, with five people onboard. Despite efforts from government agencies, navies and commercial deep-sea firms, there has been no sign of the vessel thus far. The rescue operation is continuing overnight in the mid-Atlantic.\n****************************************************************************************************\nDoing extract NERs...\n\nNERs: US, Canadian, tourist, submarine, Titanic, wreck, Five people, sub, mid-Atlantic, government agencies, both countries' navies, commercial deep-sea firms\n****************************************************************************************************\nDoing extract keywords...\n\n1. US \n2. Canadian \n3. Tourist Submarine \n4. Titanic's Wreck \n5. Dive \n6. Five People \n7. Mid-Atlantic \n8. Government Agencies \n9. Navies \n10. Commercial Deep-Sea Firms\n****************************************************************************************************\nDoing extract key sentences...\n1. US and Canadian search teams are racing against time to find a tourist submarine that went missing during a dive to the Titanic's wreck on Sunday.\n2. Five people were onboard when contact with the small sub was lost about an hour and 45 minutes into its dive. \n3. Government agencies, both countries' navies and commercial deep-sea firms are all helping the rescue operation.\n****************************************************************************************************\nDoing extract random words starting with 's'...\n\nSearch, Sunday, Submarine, Sub, Submersible, Systematic, Studies, Spend, Supported, Scheduled, Salvage\n****************************************************************************************************\n22.1 s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)\n\n\n\ntasks = [chain.arun(do_what=do_what, text=text) for do_what in do_whats]\nawait asyncio.gather(*tasks)\n\n/tmp/ipykernel_3555286/2562969474.py:2: RuntimeWarning: coroutine 'Chain.arun' was never awaited\n  tasks = [chain.arun(do_what=do_what, text=text) for do_what in do_whats]\nRuntimeWarning: Enable tracemalloc to get the object allocation traceback\n\n\n[\"\\nSearch teams from the US and Canada are racing against time to locate a tourist submarine with 5 people onboard that went missing during a dive to the Titanic's wreck on Sunday. The rescue operation is continuing overnight in the mid-Atlantic with the help of government agencies, both countries' navies and commercial deep-sea firms, but so far there has been no sign of the vessel.\",\n \"\\nNERs: US, Canadian, search teams, tourist submarine, dive, Titanic's wreck, Five people, small sub, mid-Atlantic, government agencies, both countries' navies, commercial deep-sea firms\",\n '\\nKeywords: US, Canadian, search teams, tourist submarine, dive, Titanic, wreck, Sunday, five people, mid-Atlantic, government agencies, navies, commercial deep-sea firms, rescue operation',\n \"\\n1. US and Canadian search teams are racing against time to find a tourist submarine that went missing during a dive to the Titanic's wreck on Sunday.\\n2. Five people were onboard when contact with the small sub was lost about an hour and 45 minutes into its dive.\\n3. Government agencies, both countries' navies and commercial deep-sea firms are all helping the rescue operation.\",\n \"\\nSearch, Sunday, submarine, small, sign, sub, Sunday's, governments, navies, commercial\"]"
  },
  {
    "objectID": "00_llm_intro/intro_to_langchain.html#langchain-memory",
    "href": "00_llm_intro/intro_to_langchain.html#langchain-memory",
    "title": "Guidelines for Prompting in Langchain",
    "section": "LangChain: Memory",
    "text": "LangChain: Memory\nOne of the most common use cases for LLMs is to use it as a chatbot. However, LLMs are stateless hence there is no memory of previous calls to the API. We must create a memory for the LLM to be able to remember previous calls.\n\nConversationBufferMemory\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.chains import ConversationChain\nfrom langchain.memory import ConversationBufferMemory\n\n\nllm = ChatOpenAI(temperature=0.0)\nmemory = ConversationBufferMemory()\nconversation = ConversationChain(\n    llm=llm, \n    memory = memory,\n    verbose=True\n)\n\n\nconversation.predict(input=\"Hi, my name is Łukasz\")\n\n\n\n&gt; Entering new  chain...\nPrompt after formatting:\nThe following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\n\nHuman: Hi, my name is Łukasz\nAI:\n\n&gt; Finished chain.\n\n\nRetrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.&lt;locals&gt;._completion_with_retry in 1.0 seconds as it raised ServiceUnavailableError: The server is overloaded or not ready yet..\n\n\n\"Hello Łukasz, it's nice to meet you! My name is AI. How can I assist you today?\"\n\n\n\nconversation.predict(input=\"What is the best joke ever?\")\n\n\n\n&gt; Entering new  chain...\nPrompt after formatting:\nThe following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\nHuman: Hi, my name is Łukasz\nAI: Hello Łukasz, it's nice to meet you! My name is AI. How can I assist you today?\nHuman: What is the best joke ever?\nAI:\n\n&gt; Finished chain.\n\n\n'That\\'s a subjective question, as humor is different for everyone. However, one of the most popular jokes of all time is \"Why did the chicken cross the road? To get to the other side!\"'\n\n\n\nconversation.predict(input=\"What is my name?\")\n\n\n\n&gt; Entering new  chain...\nPrompt after formatting:\nThe following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\nHuman: Hi, my name is Łukasz\nAI: Hello Łukasz, it's nice to meet you! My name is AI. How can I assist you today?\nHuman: What is the best joke ever?\nAI: That's a subjective question, as humor is different for everyone. However, one of the most popular jokes of all time is \"Why did the chicken cross the road? To get to the other side!\"\nHuman: What is my name?\nAI:\n\n&gt; Finished chain.\n\n\n'Your name is Łukasz, as you mentioned earlier.'\n\n\n\nprint(memory.buffer)\n\nHuman: Hi, my name is Łukasz\nAI: Hello Łukasz, it's nice to meet you! My name is AI. How can I assist you today?\nHuman: What is the best joke ever?\nAI: That's a subjective question, as humor is different for everyone. However, one of the most popular jokes of all time is \"Why did the chicken cross the road? To get to the other side!\"\nHuman: What is my name?\nAI: Your name is Łukasz, as you mentioned earlier.\n\n\n\nmemory.load_memory_variables({})\n\n{'history': 'Human: Hi, my name is Łukasz\\nAI: Hello Łukasz, it\\'s nice to meet you! My name is AI. How can I assist you today?\\nHuman: What is the best joke ever?\\nAI: That\\'s a subjective question, as humor is different for everyone. However, one of the most popular jokes of all time is \"Why did the chicken cross the road? To get to the other side!\"\\nHuman: What is my name?\\nAI: Your name is Łukasz, as you mentioned earlier.'}\n\n\n\nmemory = ConversationBufferMemory()\n\n\nmemory.save_context(\n    {\"input\": \"Hi Joey!\"}, \n    {\"output\": \"How you doin'?\"}\n)\n\n\nprint(memory.buffer)\n\nHuman: Hi Joey!\nAI: How you doin'?\n\n\n\nmemory.load_memory_variables({})\n\n{'history': \"Human: Hi Joey!\\nAI: How you doin'?\"}\n\n\n\nmemory.save_context(\n    {\"input\": \"Awesome bro!\"}, \n    {\"output\": \"Do want a sandwich with salami?\"}\n)\n\n\nmemory.load_memory_variables({})\n\n{'history': \"Human: Hi Joey!\\nAI: How you doin'?\\nHuman: Awesome bro!\\nAI: Do want a sandwich with salami?\"}"
  },
  {
    "objectID": "00_llm_intro/intro_to_langchain.html#conversationbufferwindowmemory",
    "href": "00_llm_intro/intro_to_langchain.html#conversationbufferwindowmemory",
    "title": "Guidelines for Prompting in Langchain",
    "section": "ConversationBufferWindowMemory",
    "text": "ConversationBufferWindowMemory\n\nfrom langchain.memory import ConversationBufferWindowMemory\n\n\nmemory = ConversationBufferWindowMemory(k=1)               \n\nmemory.save_context(\n    {\"input\": \"Hi Joey!\"}, \n    {\"output\": \"How you doin'?\"}\n)\nmemory.save_context(\n    {\"input\": \"Awesome bro!\"}, \n    {\"output\": \"Do want a sandwich with salami?\"}\n)\n\n\nmemory.load_memory_variables({})\n\n{'history': 'Human: Awesome bro!\\nAI: Do want a sandwich with salami?'}\n\n\n\nllm = ChatOpenAI(temperature=0.0)\nmemory = ConversationBufferWindowMemory(k=1)\nconversation = ConversationChain(\n    llm=llm, \n    memory = memory,\n    verbose=False\n)\n\n\nconversation.predict(input=\"Hi, my name is Lukasz\")\n\n\"Hello Lukasz, it's nice to meet you. My name is AI. How can I assist you today?\"\n\n\n\nconversation.predict(input=\"Placeholder for a very, very important question\")\n\n\"I'm sorry, Lukasz, but I'm not sure I understand your question. Could you please provide me with more context or details so I can better assist you?\"\n\n\n\nconversation.predict(input=\"What is my name?\")\n\n'Your name is Lukasz.'\n\n\n\nconversation.predict(input=\"Have I been asking for placeholders?\")\n\n\"I'm sorry, I don't have enough context to answer that question. Could you please provide more information?\"\n\n\n\nconversation.predict(input=\"Nevermind! Do you know me?\")\n\nRetrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.&lt;locals&gt;._completion_with_retry in 1.0 seconds as it raised ServiceUnavailableError: The server is overloaded or not ready yet..\nRetrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.&lt;locals&gt;._completion_with_retry in 2.0 seconds as it raised RateLimitError: That model is currently overloaded with other requests. You can retry your request, or contact us through our help center at help.openai.com if the error persists. (Please include the request ID 97b35ddd62d28fcf0b82fc4ccf4d093b in your message.).\n\n\n\"Yes, I have access to information about you based on our interactions. I know your name, some of your preferences, and some of the topics we have discussed in the past. However, I don't have access to your personal information or anything that you haven't shared with me.\"\n\n\n\nconversation.predict(input=\"Do you remember my name?\")\n\n'Yes, your name is [insert name here].'\n\n\nWelcom to the workshop lead by [insert name here] :)"
  },
  {
    "objectID": "00_llm_intro/intro_to_langchain.html#conversationtokenbuffermemory",
    "href": "00_llm_intro/intro_to_langchain.html#conversationtokenbuffermemory",
    "title": "Guidelines for Prompting in Langchain",
    "section": "ConversationTokenBufferMemory",
    "text": "ConversationTokenBufferMemory\n\nfrom langchain.memory import ConversationTokenBufferMemory\nfrom langchain.llms import OpenAI\n\n\nllm = ChatOpenAI(temperature=0.0)\n\nmemory = ConversationTokenBufferMemory(llm=llm, max_token_limit=30)\n\nmemory.save_context(\n    {\"input\": \"Hi Joey!\"}, \n    {\"output\": \"How you doin'?\"}\n)\nmemory.save_context(\n    {\"input\": \"Awesome bro!\"}, \n    {\"output\": \"Do want a sandwich with salami?\"}\n)\n\nmemory.load_memory_variables({})\n\n{'history': 'Human: Awesome bro!\\nAI: Do want a sandwich with salami?'}"
  },
  {
    "objectID": "00_llm_intro/intro_to_langchain.html#conversationsummarymemory",
    "href": "00_llm_intro/intro_to_langchain.html#conversationsummarymemory",
    "title": "Guidelines for Prompting in Langchain",
    "section": "ConversationSummaryMemory",
    "text": "ConversationSummaryMemory\n\nfrom langchain.memory import ConversationSummaryBufferMemory\n\n\nchatbot_system_prompt = \"\"\"\nJesteś asystentem AI Szkoły Letniej, pomagasz uczestnikom wybrać najlepsze warsztaty. \n\n###\n\nWorkshops:\nBartosz Kolasa  MLOps   Systematizing a research code aka introduction to Kedro framework   During the workshops I would like to present the Kedro framework which is a MLOps tool to systematize any data science research project into a pipeline represented by a DAG (directed acyclic graph). Such an approach helps in creating more reproducible experiments that could be much more easily moved from your laptop to processing on a bigger cluster or in the cloud.\nŁukasz Augustyniak  Prompt Engineering  Large Language Models - from Demo to Production \"In this interactive workshop, we will delve into the fascinating world of large language models and explore their potential in revolutionizing various industries. I will guide participants through the process of transforming cutting-edge demos into scalable production solutions.\n\nParticipants will gain hands-on experience by working on practical exercises that demonstrate how to fine-tune these models for specific tasks. Additionally, we'll cover best practices for deploying these models at scale while maintaining efficiency and performance.\n\nThroughout the workshop, attendees can expect engaging discussions about ethical considerations surrounding AI usage as well as insights into future developments within the field. By the end of this session, participants should have a solid understanding of how to harness the power of large language models effectively in order to drive innovation across various domains.\"\nArkadiusz Janz  Generative Language Models  Training Large Language Models with Reinforcement Learning from Human Feedback (RLHF)   A comprehensive introduction to Generative Language Models and Reinforcement Learning from Human Feedback: a novel approach in training Large Language Models for downstream tasks. This workshop is designed to impart an in-depth understanding of fundamental concepts of Reinforcement Learning (states, actions, rewards, value functions, policies) and Generative Language Models. A theoretical comparison with Supervised Learning paradigm will be discussed, along with the advantages RLHF optimization brings to reducing biases, and overcoming sparse reward issues. Participants will engage in hands-on activities involving RLHF training with simplified models, hyperparameter tuning of RLHF models, and diving into existing RLHF programming frameworks.\nKonrad Wojtasik Information Retrieval   Introduction to modern information retrieval    Information retrieval plays a crucial role in modern systems, finding applications across diverse domains and industries. Its relevance spans from web search and recommendation systems to product search and health and legal information retrieval. Information retrieval is not only essential for traditional search applications but also plays a vital role in retrieval-augmented Question Answering systems. Additionally, it serves as a valuable mechanism to prevent Large Language Models from generating incorrect or hallucinated information. Moreover, it ensures that their knowledge remains accurate and up-to-date. During this workshop, participants will have the opportunity to explore and understand current state-of-the-art models used in information retrieval. They will gain insights into the strengths and limitations of these models. Furthermore, the workshop will focus on setting up an information retrieval pipeline, allowing participants to gain hands-on experience in building and implementing such systems. Additionally, participants will learn how to effectively measure and evaluate the performance of their information retrieval pipelines.\nMateusz Gniewkowski XAI Model Agnostic Explanations Techniques  \"Machine learning models can often be complex and difficult to understand, therefore it is important to be able to explain how these models work, as they are increasingly used in a wide range of industries and applications.\nThe workshop will start by discussing some basic ways to explain machine learning models, such as using feature importance measures, decision trees, and visualization tools. However, the focus will then shift to model-agnostic techniques, which can be applied to any type of machine learning model.\nThe techniques that will be covered in the workshop include LIME (Local Interpretable Model-Agnostic Explanations) and SHAP (SHapley Additive exPlanations). These libraries are designed to provide more transparent and understandable explanations for machine learning models, even when the models themselves are complex or difficult to interpret.\"\nPiotr Bielak    Representation learning Introduction to graph representation learning   In recent years, representation learning has attracted much attention both in the research community and industrial applications. Learning representations for graphs is especially challenging due to the relational nature of such data, i.e., one must reflect both the rich attribute space and graph structure in the embedding vectors. During this workshop, I will show how to use the PyTorch-Geometric library to easily build graph representations and solve a variety of applications. We will explore node, edge and graph-level representations through the prism of their associated downstream tasks and corresponding deep learning models (Graph Neural Networks).\nDenis Janiak    Representation learning, Bayesian methods   Does Representation Know What It Doesn't Know?  \"Uncertainty estimation is a critical aspect of artificial intelligence systems, enabling them to quantify their confidence and provide reliable predictions. However, accurately assessing uncertainty becomes increasingly challenging when AI models encounter scenarios outside their training data distribution. This workshop, titled \"\"Does Representation Know What It Doesn't Know?,\"\" aims to explore the concept of uncertainty estimation in AI systems and delve into the question of whether representations within these systems possess the ability to recognize their own limitations. During the workshop, we will investigate the various techniques and methodologies employed in uncertainty estimation, such as Bayesian approaches and deep learning-based techniques. We will analyze the strengths and limitations of these approaches and discuss their implications for real-world applications.\nFurthermore, the workshop will delve into the concept of representation learning and its impact on uncertainty estimation. We will examine whether AI systems can effectively recognize when they are faced with novel or out-of-distribution inputs. Additionally, we will explore approaches to measure and improve representation awareness, enabling models to identify areas of uncertainty and seek further guidance or human intervention when necessary.\nBy the end of the workshop, attendees will gain a deeper understanding of the state-of-the-art techniques for uncertainty estimation and its importance in building robust AI systems. They will also gain insights into the fundamental question of whether representations within AI models possess the capability to identify areas of uncertainty and adapt accordingly. \"\nAlbert Sawczyn  Representation learning Knowledge Graph Representation Learning Knowledge graphs have emerged as powerful tools for organizing and representing structured information in various domains, enabling efficient data integration, inference, and knowledge discovery. Knowledge graph representation learning aims to capture the rich semantic relationships and contextual information within knowledge graphs, facilitating effective knowledge inference and reasoning. This workshop aims to introduce the fundamental challenge of learning representations for knowledge graphs and highlight their significance in practical applications. Practical demonstrations will show how to easily learn representation using the PyKEEN library and how to apply it to a real-world NLP problem. \nJakub Binkowski Representation learning Generative models for graphs    After many advancements in the realm of Graph Representation Learning, graph generation gained much attention due to its vast range of applications (e.g. drug design). Nonetheless, due to the nature of graph data, this task is very difficult and further breakthroughs still need to be discovered. Hence the workshop will provide a ground understanding of the selected methods and problems associated with graph generation. During the workshop, I will show the most important methods in theory and practice. I will show how to implement these methods leveraging Pytorch Geometric library. We will go through training and evaluation using common datasets.\nKamil Kanclerz  NLP, Personalization    Subjective problems in NLP  \"A unified gold standard commonly exploited in natural language processing (NLP) tasks requires high inter-annotator agreement. However, there are many subjective problems that should respect users’ individual points of view. At the first glance, disagreement and non-regular annotations can be seen as noise that drags the performance of NLP task detection models down. As we know, the ability to think and perceive the environment differently is natural to humans as such. Therefore, it is crucial to include this observation while building predictive models in order to reflect the setup close to reality. As simple as this may seem, it is important to keep in mind that the key ideas behind NLP phenomenon detection, such as gold standard, agreement coefficients, or the evaluation itself need to be thoroughly analyzed and reconsidered especially for subjective NLP tasks like hate speech detection, prediction of emotional elicitation, sense of humor, sarcasm detection, or even sentiment analysis. Such NLP tasks come with each complexity of their own, especially within the aspect of subjectivity, therefore making them difficult to solve compared to non-subjective tasks.\n\nDuring the workshop, the participants will be introduced to the novel deep neural architectures leveraging various user representations. Moreover, the user-centered data setups will be explained in comparison to their ground truth equivalents. Additionally, the personalized evaluation techniques will be presented as the methods providing further insight into model ability to understand differences between various user perspectives.\"\nMateusz Wójcik  MLOps, continual learning   Continual Learning - techniques and applications    \"Recently, neural architectures have become effective and widely used in various domains. The parameter optimization process based on gradient descent works well when the data set is sufficiently large and fully available during the training process. But what if we don’t have all the data available during training? What if the number of classes increase? As a result, we have to manually retrain the models from scratch ensuing a time-consuming process.\n\nDuring this workshop you will learn about the Continual Learning and its applications. We will discuss the catastrophic forgetting and explore various techniques that trying to prevent it starting from simple neural networks up to modern LLMs. As a result, you will understand why we need Continual Learning and how to apply it to existing or new models.\"\nPatryk Wielopolski  Generative Models   Conditional object generation using pre-trained models and plug-in networks Generative models have gained many Machine Learning practitioners’ attention in the last years resulting in models such as StyleGAN for human face generation or PointFlow for the 3D point cloud generation. However, by default, we cannot control its sampling process, i.e., we cannot generate a sample with a specific set of attributes. The current approach is model retraining with additional inputs and different architecture, which requires time and computational resources. During this hands-on workshop we will go through a method which enables to generate objects with a given set of attributes without retraining the base model. For this purpose, we will utilize the normalizing flow models - Conditional Masked Autoregressive Flow and Conditional Real NVP, and plug-in networks resulting in the Flow Plugin Network.\nMichał Czuba    Network Science Complex networks part II - spreading processes  Two years ago, the world faced SARS-CoV-2 and the biggest pandemic in the century. Since last winter, with an incursion of Russian troops in Ukraine, all civilised countries have been subjected to misinformation. This year with an election in Poland, a festival of campaign promises has started. The nature of these three examples is complex and hard to analyse. Nonetheless, one of the approaches leading to understanding and controlling such processes is a network simulation. During this workshop, you will learn an essential toolkit to model and analyse spreading phenomena in complex networks. You will understand how to simulate such processes as epidemics or opinion dynamics and how to identify key spreaders of fake news or the most fragile individuals to be vaccinated in the first place.\nMateusz Nurek   Network Science Complex networks part I - social network analysis   Computational network science is a field of artificial intelligence that analyses graphs in applied problems involving social, transportation, epidemiological or energy issues. This workshop will teach you fundamental tools and techniques for analysing this data type. Based on a case study - the history of communication in a particular company, we will solve the problem of optimising the structure of its organisation. We will detect natural teams from employees most intensively working together. We will also identify key personnel, i.e. employees whose loss can cause communication paralysis.\nDamian Serwata  Network Science \"Complex networks I - social network analysis\nComplex networks II - spreading processes\"  \nMichał Karol    ML w medycynie  Computer Vision for medical image processing    Computer vision has emerged as a revolutionary technology in the medical field, bringing significant transformations in various aspects of healthcare. Its application in clinical practice has paved the way for improved diagnostics, more accurate disease detection, and enhanced treatment planning. The objective of this workshop is to bring comprehensive understanding of the impact of computer vision in clinical practice. Participants will gain insights into how this technology is reshaping healthcare and improving patient outcomes. By exploring the latest advancements in certified medical systems, attendees will learn about the integration of computer vision into existing medical frameworks and protocols. Moreover, the workshop will delve into current research areas within computer vision in medicine. Participants will be introduced to cutting-edge studies and ongoing projects that aim to further enhance the capabilities of computer vision in the healthcare domain. In the second part of the workshop, there will be an interactive session focused on implementing classification and segmentation networks using the JAX framework and the Flax library. \nPiotr Kawa  Analiza dźwięku (TTS, DF)   Generating audio DeepFakes and how to detect them   Recent advances in audio processing and speech synthesis allow the creation of realistic speech - DeepFakes. Despite a number of advantages, this technology poses a threat through its potential applications including disinformation spreading. Participants in this workshop will learn about the latest technologies for speech generation and then how to defend themselves against the malicious use of this technology using state-of-the-art DeepFake detection techniques.\n\n\"\"\"\n\n\nmemory = ConversationSummaryBufferMemory(llm=llm, max_token_limit=2000)\nmemory.save_context(\n    {\"input\": \"Cześć\"}, \n    {\"output\": \"Cześć, jestem asystentem studenta na szkole letniej AI Tech. Pomogę znaleźć Ci odpowiednie warsztaty i wykłady.\"}\n)\nmemory.save_context(\n    {\"input\": \"Szukam warsztatów\"},\n    {\"output\": f\"Pewnie chodzi Ci o te super warsztaty na szkole letniej AI tech? Na jaki temat szukasz warsztatów? Możliwe to: {chatbot_system_prompt}\"}\n)\n\nmemory.load_memory_variables({})\n\n{'history': 'System: The human greets the AI in Polish and the AI responds, introducing itself as an assistant for the AI Tech summer school. The human expresses interest in workshops and the AI provides a list of available workshops with brief descriptions. The workshops cover topics such as MLOps, large language models, generative language models, information retrieval, model agnostic explanation techniques, representation learning, Bayesian methods, NLP, personalization, continual learning, generative models, network science, and computer vision for medical image processing. The AI also mentions a workshop on generating audio DeepFakes and how to detect them.'}\n\n\n\nconversation = ConversationChain(\n    llm=llm, \n    memory = memory,\n    verbose=True\n)\n\nconversation.predict(input=\"jest coś z Large language models?\")\n\n\n\n&gt; Entering new  chain...\nPrompt after formatting:\nThe following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\nSystem: The human greets the AI in Polish and the AI responds, introducing itself as an assistant for the AI Tech summer school. The human expresses interest in workshops and the AI provides a list of available workshops with brief descriptions. The workshops cover topics such as MLOps, large language models, generative language models, information retrieval, model agnostic explanation techniques, representation learning, Bayesian methods, NLP, personalization, continual learning, generative models, network science, and computer vision for medical image processing. The AI also mentions a workshop on generating audio DeepFakes and how to detect them.\nHuman: jest coś z Large language models?\nAI:\n\n&gt; Finished chain.\n\n\n'Tak, mamy warsztat dotyczący dużych modeli językowych. W tym warsztacie uczestnicy będą mieli okazję nauczyć się, jak budować i trenować modele językowe o dużej skali, takie jak GPT-3. Będziemy omawiać różne techniki i narzędzia, które pomogą w tworzeniu i optymalizacji tych modeli. Warsztat ten będzie prowadzony przez doświadczonych specjalistów z dziedziny uczenia maszynowego i będzie składał się z wykładów, ćwiczeń praktycznych i dyskusji.'\n\n\n\nconversation.predict(input=\"a kto go prowadzi?\")\n\n\n\n&gt; Entering new  chain...\nPrompt after formatting:\nThe following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\nSystem: The human greets the AI in Polish and the AI responds, introducing itself as an assistant for the AI Tech summer school. The human expresses interest in workshops and the AI provides a list of available workshops with brief descriptions. The workshops cover topics such as MLOps, large language models, generative language models, information retrieval, model agnostic explanation techniques, representation learning, Bayesian methods, NLP, personalization, continual learning, generative models, network science, and computer vision for medical image processing. The AI also mentions a workshop on generating audio DeepFakes and how to detect them.\nHuman: jest coś z Large language models?\nAI: Tak, mamy warsztat dotyczący dużych modeli językowych. W tym warsztacie uczestnicy będą mieli okazję nauczyć się, jak budować i trenować modele językowe o dużej skali, takie jak GPT-3. Będziemy omawiać różne techniki i narzędzia, które pomogą w tworzeniu i optymalizacji tych modeli. Warsztat ten będzie prowadzony przez doświadczonych specjalistów z dziedziny uczenia maszynowego i będzie składał się z wykładów, ćwiczeń praktycznych i dyskusji.\nHuman: a kto go prowadzi?\nAI:\n\n&gt; Finished chain.\n\n\n'Warsztat dotyczący dużych modeli językowych będzie prowadzony przez dr. Johna Smitha, który jest ekspertem w dziedzinie uczenia maszynowego i ma wiele lat doświadczenia w pracy z dużymi modelami językowymi. Dr. Smith jest autorem wielu publikacji naukowych na ten temat i jest znany z prowadzenia interaktywnych i praktycznych warsztatów.'\n\n\n\nmemory.load_memory_variables({})\n\n{'history': 'System: The human greets the AI in Polish and the AI responds, introducing itself as an assistant for the AI Tech summer school. The human expresses interest in workshops and the AI provides a list of available workshops with brief descriptions. The workshops cover topics such as MLOps, large language models, generative language models, information retrieval, model agnostic explanation techniques, representation learning, Bayesian methods, NLP, personalization, continual learning, generative models, network science, and computer vision for medical image processing. The AI also mentions a workshop on generating audio DeepFakes and how to detect them.\\nHuman: jest coś z Large language models?\\nAI: Tak, mamy warsztat dotyczący dużych modeli językowych. W tym warsztacie uczestnicy będą mieli okazję nauczyć się, jak budować i trenować modele językowe o dużej skali, takie jak GPT-3. Będziemy omawiać różne techniki i narzędzia, które pomogą w tworzeniu i optymalizacji tych modeli. Warsztat ten będzie prowadzony przez doświadczonych specjalistów z dziedziny uczenia maszynowego i będzie składał się z wykładów, ćwiczeń praktycznych i dyskusji.\\nHuman: a kto go prowadzi?\\nAI: Warsztat dotyczący dużych modeli językowych będzie prowadzony przez dr. Johna Smitha, który jest ekspertem w dziedzinie uczenia maszynowego i ma wiele lat doświadczenia w pracy z dużymi modelami językowymi. Dr. Smith jest autorem wielu publikacji naukowych na ten temat i jest znany z prowadzenia interaktywnych i praktycznych warsztatów.'}\n\n\nWhere is our workshop list?\n\nfrom langchain.memory import ConversationBufferMemory\nfrom langchain import OpenAI, LLMChain, PromptTemplate\n\n\ntemplate = chatbot_system_prompt + \"\"\"\n\nHistoria Rozmowy:\n{chat_history}\nStudent: {human_input}\nAsystent:\"\"\"\n\nprompt = PromptTemplate(\n    input_variables=[\"chat_history\", \"human_input\"], template=template\n)\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\n\n\nllm_chain = LLMChain(\n    llm=OpenAI(),\n    prompt=prompt,\n    verbose=True,\n    memory=memory,\n)\n\n\nmemory.load_memory_variables({})\n\n{'chat_history': ''}\n\n\n\nllm_chain.predict(human_input=\"jest coś z Large language models?\")\n\n\n\n&gt; Entering new  chain...\nPrompt after formatting:\n\n###\n\nWorkshops:\nBartosz Kolasa  MLOps   Systematizing a research code aka introduction to Kedro framework   During the workshops I would like to present the Kedro framework which is a MLOps tool to systematize any data science research project into a pipeline represented by a DAG (directed acyclic graph). Such an approach helps in creating more reproducible experiments that could be much more easily moved from your laptop to processing on a bigger cluster or in the cloud.\nŁukasz Augustyniak  Prompt Engineering  Large Language Models - from Demo to Production \"In this interactive workshop, we will delve into the fascinating world of large language models and explore their potential in revolutionizing various industries. I will guide participants through the process of transforming cutting-edge demos into scalable production solutions.\n\nParticipants will gain hands-on experience by working on practical exercises that demonstrate how to fine-tune these models for specific tasks. Additionally, we'll cover best practices for deploying these models at scale while maintaining efficiency and performance.\n\nThroughout the workshop, attendees can expect engaging discussions about ethical considerations surrounding AI usage as well as insights into future developments within the field. By the end of this session, participants should have a solid understanding of how to harness the power of large language models effectively in order to drive innovation across various domains.\"\nArkadiusz Janz  Generative Language Models  Training Large Language Models with Reinforcement Learning from Human Feedback (RLHF)   A comprehensive introduction to Generative Language Models and Reinforcement Learning from Human Feedback: a novel approach in training Large Language Models for downstream tasks. This workshop is designed to impart an in-depth understanding of fundamental concepts of Reinforcement Learning (states, actions, rewards, value functions, policies) and Generative Language Models. A theoretical comparison with Supervised Learning paradigm will be discussed, along with the advantages RLHF optimization brings to reducing biases, and overcoming sparse reward issues. Participants will engage in hands-on activities involving RLHF training with simplified models, hyperparameter tuning of RLHF models, and diving into existing RLHF programming frameworks.\nKonrad Wojtasik Information Retrieval   Introduction to modern information retrieval    Information retrieval plays a crucial role in modern systems, finding applications across diverse domains and industries. Its relevance spans from web search and recommendation systems to product search and health and legal information retrieval. Information retrieval is not only essential for traditional search applications but also plays a vital role in retrieval-augmented Question Answering systems. Additionally, it serves as a valuable mechanism to prevent Large Language Models from generating incorrect or hallucinated information. Moreover, it ensures that their knowledge remains accurate and up-to-date. During this workshop, participants will have the opportunity to explore and understand current state-of-the-art models used in information retrieval. They will gain insights into the strengths and limitations of these models. Furthermore, the workshop will focus on setting up an information retrieval pipeline, allowing participants to gain hands-on experience in building and implementing such systems. Additionally, participants will learn how to effectively measure and evaluate the performance of their information retrieval pipelines.\nMateusz Gniewkowski XAI Model Agnostic Explanations Techniques  \"Machine learning models can often be complex and difficult to understand, therefore it is important to be able to explain how these models work, as they are increasingly used in a wide range of industries and applications.\nThe workshop will start by discussing some basic ways to explain machine learning models, such as using feature importance measures, decision trees, and visualization tools. However, the focus will then shift to model-agnostic techniques, which can be applied to any type of machine learning model.\nThe techniques that will be covered in the workshop include LIME (Local Interpretable Model-Agnostic Explanations) and SHAP (SHapley Additive exPlanations). These libraries are designed to provide more transparent and understandable explanations for machine learning models, even when the models themselves are complex or difficult to interpret.\"\nPiotr Bielak    Representation learning Introduction to graph representation learning   In recent years, representation learning has attracted much attention both in the research community and industrial applications. Learning representations for graphs is especially challenging due to the relational nature of such data, i.e., one must reflect both the rich attribute space and graph structure in the embedding vectors. During this workshop, I will show how to use the PyTorch-Geometric library to easily build graph representations and solve a variety of applications. We will explore node, edge and graph-level representations through the prism of their associated downstream tasks and corresponding deep learning models (Graph Neural Networks).\nDenis Janiak    Representation learning, Bayesian methods   Does Representation Know What It Doesn't Know?  \"Uncertainty estimation is a critical aspect of artificial intelligence systems, enabling them to quantify their confidence and provide reliable predictions. However, accurately assessing uncertainty becomes increasingly challenging when AI models encounter scenarios outside their training data distribution. This workshop, titled \"\"Does Representation Know What It Doesn't Know?,\"\" aims to explore the concept of uncertainty estimation in AI systems and delve into the question of whether representations within these systems possess the ability to recognize their own limitations. During the workshop, we will investigate the various techniques and methodologies employed in uncertainty estimation, such as Bayesian approaches and deep learning-based techniques. We will analyze the strengths and limitations of these approaches and discuss their implications for real-world applications.\nFurthermore, the workshop will delve into the concept of representation learning and its impact on uncertainty estimation. We will examine whether AI systems can effectively recognize when they are faced with novel or out-of-distribution inputs. Additionally, we will explore approaches to measure and improve representation awareness, enabling models to identify areas of uncertainty and seek further guidance or human intervention when necessary.\nBy the end of the workshop, attendees will gain a deeper understanding of the state-of-the-art techniques for uncertainty estimation and its importance in building robust AI systems. They will also gain insights into the fundamental question of whether representations within AI models possess the capability to identify areas of uncertainty and adapt accordingly. \"\nAlbert Sawczyn  Representation learning Knowledge Graph Representation Learning Knowledge graphs have emerged as powerful tools for organizing and representing structured information in various domains, enabling efficient data integration, inference, and knowledge discovery. Knowledge graph representation learning aims to capture the rich semantic relationships and contextual information within knowledge graphs, facilitating effective knowledge inference and reasoning. This workshop aims to introduce the fundamental challenge of learning representations for knowledge graphs and highlight their significance in practical applications. Practical demonstrations will show how to easily learn representation using the PyKEEN library and how to apply it to a real-world NLP problem. \nJakub Binkowski Representation learning Generative models for graphs    After many advancements in the realm of Graph Representation Learning, graph generation gained much attention due to its vast range of applications (e.g. drug design). Nonetheless, due to the nature of graph data, this task is very difficult and further breakthroughs still need to be discovered. Hence the workshop will provide a ground understanding of the selected methods and problems associated with graph generation. During the workshop, I will show the most important methods in theory and practice. I will show how to implement these methods leveraging Pytorch Geometric library. We will go through training and evaluation using common datasets.\nKamil Kanclerz  NLP, Personalization    Subjective problems in NLP  \"A unified gold standard commonly exploited in natural language processing (NLP) tasks requires high inter-annotator agreement. However, there are many subjective problems that should respect users’ individual points of view. At the first glance, disagreement and non-regular annotations can be seen as noise that drags the performance of NLP task detection models down. As we know, the ability to think and perceive the environment differently is natural to humans as such. Therefore, it is crucial to include this observation while building predictive models in order to reflect the setup close to reality. As simple as this may seem, it is important to keep in mind that the key ideas behind NLP phenomenon detection, such as gold standard, agreement coefficients, or the evaluation itself need to be thoroughly analyzed and reconsidered especially for subjective NLP tasks like hate speech detection, prediction of emotional elicitation, sense of humor, sarcasm detection, or even sentiment analysis. Such NLP tasks come with each complexity of their own, especially within the aspect of subjectivity, therefore making them difficult to solve compared to non-subjective tasks.\n\nDuring the workshop, the participants will be introduced to the novel deep neural architectures leveraging various user representations. Moreover, the user-centered data setups will be explained in comparison to their ground truth equivalents. Additionally, the personalized evaluation techniques will be presented as the methods providing further insight into model ability to understand differences between various user perspectives.\"\nMateusz Wójcik  MLOps, continual learning   Continual Learning - techniques and applications    \"Recently, neural architectures have become effective and widely used in various domains. The parameter optimization process based on gradient descent works well when the data set is sufficiently large and fully available during the training process. But what if we don’t have all the data available during training? What if the number of classes increase? As a result, we have to manually retrain the models from scratch ensuing a time-consuming process.\n\nDuring this workshop you will learn about the Continual Learning and its applications. We will discuss the catastrophic forgetting and explore various techniques that trying to prevent it starting from simple neural networks up to modern LLMs. As a result, you will understand why we need Continual Learning and how to apply it to existing or new models.\"\nPatryk Wielopolski  Generative Models   Conditional object generation using pre-trained models and plug-in networks Generative models have gained many Machine Learning practitioners’ attention in the last years resulting in models such as StyleGAN for human face generation or PointFlow for the 3D point cloud generation. However, by default, we cannot control its sampling process, i.e., we cannot generate a sample with a specific set of attributes. The current approach is model retraining with additional inputs and different architecture, which requires time and computational resources. During this hands-on workshop we will go through a method which enables to generate objects with a given set of attributes without retraining the base model. For this purpose, we will utilize the normalizing flow models - Conditional Masked Autoregressive Flow and Conditional Real NVP, and plug-in networks resulting in the Flow Plugin Network.\nMichał Czuba    Network Science Complex networks part II - spreading processes  Two years ago, the world faced SARS-CoV-2 and the biggest pandemic in the century. Since last winter, with an incursion of Russian troops in Ukraine, all civilised countries have been subjected to misinformation. This year with an election in Poland, a festival of campaign promises has started. The nature of these three examples is complex and hard to analyse. Nonetheless, one of the approaches leading to understanding and controlling such processes is a network simulation. During this workshop, you will learn an essential toolkit to model and analyse spreading phenomena in complex networks. You will understand how to simulate such processes as epidemics or opinion dynamics and how to identify key spreaders of fake news or the most fragile individuals to be vaccinated in the first place.\nMateusz Nurek   Network Science Complex networks part I - social network analysis   Computational network science is a field of artificial intelligence that analyses graphs in applied problems involving social, transportation, epidemiological or energy issues. This workshop will teach you fundamental tools and techniques for analysing this data type. Based on a case study - the history of communication in a particular company, we will solve the problem of optimising the structure of its organisation. We will detect natural teams from employees most intensively working together. We will also identify key personnel, i.e. employees whose loss can cause communication paralysis.\nDamian Serwata  Network Science \"Complex networks I - social network analysis\nComplex networks II - spreading processes\"  \nMichał Karol    ML w medycynie  Computer Vision for medical image processing    Computer vision has emerged as a revolutionary technology in the medical field, bringing significant transformations in various aspects of healthcare. Its application in clinical practice has paved the way for improved diagnostics, more accurate disease detection, and enhanced treatment planning. The objective of this workshop is to bring comprehensive understanding of the impact of computer vision in clinical practice. Participants will gain insights into how this technology is reshaping healthcare and improving patient outcomes. By exploring the latest advancements in certified medical systems, attendees will learn about the integration of computer vision into existing medical frameworks and protocols. Moreover, the workshop will delve into current research areas within computer vision in medicine. Participants will be introduced to cutting-edge studies and ongoing projects that aim to further enhance the capabilities of computer vision in the healthcare domain. In the second part of the workshop, there will be an interactive session focused on implementing classification and segmentation networks using the JAX framework and the Flax library. \nPiotr Kawa  Analiza dźwięku (TTS, DF)   Generating audio DeepFakes and how to detect them   Recent advances in audio processing and speech synthesis allow the creation of realistic speech - DeepFakes. Despite a number of advantages, this technology poses a threat through its potential applications including disinformation spreading. Participants in this workshop will learn about the latest technologies for speech generation and then how to defend themselves against the malicious use of this technology using state-of-the-art DeepFake detection techniques.\n\n\n\nHistoria Rozmowy:\n\nStudent: jest coś z Large language models?\nAsystent:\n\n&gt; Finished chain.\n\n\n' Tak, mamy kilka warsztatów dotyczących dużych językowych modeli. Zajrzyj do listy warsztatów, aby zobaczyć szczegóły: Łukasz Augustyniak ma warsztat pt. \"Duże językowe modele - od demo do produkcji\". Kamil Kanclerz ma warsztat pt. „Problem subiektywny w NLP”.'\n\n\n\nllm_chain.predict(human_input=\"Świetnie, jest coś jeszcze innego z NLP?\")\n\n\n\n&gt; Entering new  chain...\nPrompt after formatting:\n\n###\n\nWorkshops:\nBartosz Kolasa  MLOps   Systematizing a research code aka introduction to Kedro framework   During the workshops I would like to present the Kedro framework which is a MLOps tool to systematize any data science research project into a pipeline represented by a DAG (directed acyclic graph). Such an approach helps in creating more reproducible experiments that could be much more easily moved from your laptop to processing on a bigger cluster or in the cloud.\nŁukasz Augustyniak  Prompt Engineering  Large Language Models - from Demo to Production \"In this interactive workshop, we will delve into the fascinating world of large language models and explore their potential in revolutionizing various industries. I will guide participants through the process of transforming cutting-edge demos into scalable production solutions.\n\nParticipants will gain hands-on experience by working on practical exercises that demonstrate how to fine-tune these models for specific tasks. Additionally, we'll cover best practices for deploying these models at scale while maintaining efficiency and performance.\n\nThroughout the workshop, attendees can expect engaging discussions about ethical considerations surrounding AI usage as well as insights into future developments within the field. By the end of this session, participants should have a solid understanding of how to harness the power of large language models effectively in order to drive innovation across various domains.\"\nArkadiusz Janz  Generative Language Models  Training Large Language Models with Reinforcement Learning from Human Feedback (RLHF)   A comprehensive introduction to Generative Language Models and Reinforcement Learning from Human Feedback: a novel approach in training Large Language Models for downstream tasks. This workshop is designed to impart an in-depth understanding of fundamental concepts of Reinforcement Learning (states, actions, rewards, value functions, policies) and Generative Language Models. A theoretical comparison with Supervised Learning paradigm will be discussed, along with the advantages RLHF optimization brings to reducing biases, and overcoming sparse reward issues. Participants will engage in hands-on activities involving RLHF training with simplified models, hyperparameter tuning of RLHF models, and diving into existing RLHF programming frameworks.\nKonrad Wojtasik Information Retrieval   Introduction to modern information retrieval    Information retrieval plays a crucial role in modern systems, finding applications across diverse domains and industries. Its relevance spans from web search and recommendation systems to product search and health and legal information retrieval. Information retrieval is not only essential for traditional search applications but also plays a vital role in retrieval-augmented Question Answering systems. Additionally, it serves as a valuable mechanism to prevent Large Language Models from generating incorrect or hallucinated information. Moreover, it ensures that their knowledge remains accurate and up-to-date. During this workshop, participants will have the opportunity to explore and understand current state-of-the-art models used in information retrieval. They will gain insights into the strengths and limitations of these models. Furthermore, the workshop will focus on setting up an information retrieval pipeline, allowing participants to gain hands-on experience in building and implementing such systems. Additionally, participants will learn how to effectively measure and evaluate the performance of their information retrieval pipelines.\nMateusz Gniewkowski XAI Model Agnostic Explanations Techniques  \"Machine learning models can often be complex and difficult to understand, therefore it is important to be able to explain how these models work, as they are increasingly used in a wide range of industries and applications.\nThe workshop will start by discussing some basic ways to explain machine learning models, such as using feature importance measures, decision trees, and visualization tools. However, the focus will then shift to model-agnostic techniques, which can be applied to any type of machine learning model.\nThe techniques that will be covered in the workshop include LIME (Local Interpretable Model-Agnostic Explanations) and SHAP (SHapley Additive exPlanations). These libraries are designed to provide more transparent and understandable explanations for machine learning models, even when the models themselves are complex or difficult to interpret.\"\nPiotr Bielak    Representation learning Introduction to graph representation learning   In recent years, representation learning has attracted much attention both in the research community and industrial applications. Learning representations for graphs is especially challenging due to the relational nature of such data, i.e., one must reflect both the rich attribute space and graph structure in the embedding vectors. During this workshop, I will show how to use the PyTorch-Geometric library to easily build graph representations and solve a variety of applications. We will explore node, edge and graph-level representations through the prism of their associated downstream tasks and corresponding deep learning models (Graph Neural Networks).\nDenis Janiak    Representation learning, Bayesian methods   Does Representation Know What It Doesn't Know?  \"Uncertainty estimation is a critical aspect of artificial intelligence systems, enabling them to quantify their confidence and provide reliable predictions. However, accurately assessing uncertainty becomes increasingly challenging when AI models encounter scenarios outside their training data distribution. This workshop, titled \"\"Does Representation Know What It Doesn't Know?,\"\" aims to explore the concept of uncertainty estimation in AI systems and delve into the question of whether representations within these systems possess the ability to recognize their own limitations. During the workshop, we will investigate the various techniques and methodologies employed in uncertainty estimation, such as Bayesian approaches and deep learning-based techniques. We will analyze the strengths and limitations of these approaches and discuss their implications for real-world applications.\nFurthermore, the workshop will delve into the concept of representation learning and its impact on uncertainty estimation. We will examine whether AI systems can effectively recognize when they are faced with novel or out-of-distribution inputs. Additionally, we will explore approaches to measure and improve representation awareness, enabling models to identify areas of uncertainty and seek further guidance or human intervention when necessary.\nBy the end of the workshop, attendees will gain a deeper understanding of the state-of-the-art techniques for uncertainty estimation and its importance in building robust AI systems. They will also gain insights into the fundamental question of whether representations within AI models possess the capability to identify areas of uncertainty and adapt accordingly. \"\nAlbert Sawczyn  Representation learning Knowledge Graph Representation Learning Knowledge graphs have emerged as powerful tools for organizing and representing structured information in various domains, enabling efficient data integration, inference, and knowledge discovery. Knowledge graph representation learning aims to capture the rich semantic relationships and contextual information within knowledge graphs, facilitating effective knowledge inference and reasoning. This workshop aims to introduce the fundamental challenge of learning representations for knowledge graphs and highlight their significance in practical applications. Practical demonstrations will show how to easily learn representation using the PyKEEN library and how to apply it to a real-world NLP problem. \nJakub Binkowski Representation learning Generative models for graphs    After many advancements in the realm of Graph Representation Learning, graph generation gained much attention due to its vast range of applications (e.g. drug design). Nonetheless, due to the nature of graph data, this task is very difficult and further breakthroughs still need to be discovered. Hence the workshop will provide a ground understanding of the selected methods and problems associated with graph generation. During the workshop, I will show the most important methods in theory and practice. I will show how to implement these methods leveraging Pytorch Geometric library. We will go through training and evaluation using common datasets.\nKamil Kanclerz  NLP, Personalization    Subjective problems in NLP  \"A unified gold standard commonly exploited in natural language processing (NLP) tasks requires high inter-annotator agreement. However, there are many subjective problems that should respect users’ individual points of view. At the first glance, disagreement and non-regular annotations can be seen as noise that drags the performance of NLP task detection models down. As we know, the ability to think and perceive the environment differently is natural to humans as such. Therefore, it is crucial to include this observation while building predictive models in order to reflect the setup close to reality. As simple as this may seem, it is important to keep in mind that the key ideas behind NLP phenomenon detection, such as gold standard, agreement coefficients, or the evaluation itself need to be thoroughly analyzed and reconsidered especially for subjective NLP tasks like hate speech detection, prediction of emotional elicitation, sense of humor, sarcasm detection, or even sentiment analysis. Such NLP tasks come with each complexity of their own, especially within the aspect of subjectivity, therefore making them difficult to solve compared to non-subjective tasks.\n\nDuring the workshop, the participants will be introduced to the novel deep neural architectures leveraging various user representations. Moreover, the user-centered data setups will be explained in comparison to their ground truth equivalents. Additionally, the personalized evaluation techniques will be presented as the methods providing further insight into model ability to understand differences between various user perspectives.\"\nMateusz Wójcik  MLOps, continual learning   Continual Learning - techniques and applications    \"Recently, neural architectures have become effective and widely used in various domains. The parameter optimization process based on gradient descent works well when the data set is sufficiently large and fully available during the training process. But what if we don’t have all the data available during training? What if the number of classes increase? As a result, we have to manually retrain the models from scratch ensuing a time-consuming process.\n\nDuring this workshop you will learn about the Continual Learning and its applications. We will discuss the catastrophic forgetting and explore various techniques that trying to prevent it starting from simple neural networks up to modern LLMs. As a result, you will understand why we need Continual Learning and how to apply it to existing or new models.\"\nPatryk Wielopolski  Generative Models   Conditional object generation using pre-trained models and plug-in networks Generative models have gained many Machine Learning practitioners’ attention in the last years resulting in models such as StyleGAN for human face generation or PointFlow for the 3D point cloud generation. However, by default, we cannot control its sampling process, i.e., we cannot generate a sample with a specific set of attributes. The current approach is model retraining with additional inputs and different architecture, which requires time and computational resources. During this hands-on workshop we will go through a method which enables to generate objects with a given set of attributes without retraining the base model. For this purpose, we will utilize the normalizing flow models - Conditional Masked Autoregressive Flow and Conditional Real NVP, and plug-in networks resulting in the Flow Plugin Network.\nMichał Czuba    Network Science Complex networks part II - spreading processes  Two years ago, the world faced SARS-CoV-2 and the biggest pandemic in the century. Since last winter, with an incursion of Russian troops in Ukraine, all civilised countries have been subjected to misinformation. This year with an election in Poland, a festival of campaign promises has started. The nature of these three examples is complex and hard to analyse. Nonetheless, one of the approaches leading to understanding and controlling such processes is a network simulation. During this workshop, you will learn an essential toolkit to model and analyse spreading phenomena in complex networks. You will understand how to simulate such processes as epidemics or opinion dynamics and how to identify key spreaders of fake news or the most fragile individuals to be vaccinated in the first place.\nMateusz Nurek   Network Science Complex networks part I - social network analysis   Computational network science is a field of artificial intelligence that analyses graphs in applied problems involving social, transportation, epidemiological or energy issues. This workshop will teach you fundamental tools and techniques for analysing this data type. Based on a case study - the history of communication in a particular company, we will solve the problem of optimising the structure of its organisation. We will detect natural teams from employees most intensively working together. We will also identify key personnel, i.e. employees whose loss can cause communication paralysis.\nDamian Serwata  Network Science \"Complex networks I - social network analysis\nComplex networks II - spreading processes\"  \nMichał Karol    ML w medycynie  Computer Vision for medical image processing    Computer vision has emerged as a revolutionary technology in the medical field, bringing significant transformations in various aspects of healthcare. Its application in clinical practice has paved the way for improved diagnostics, more accurate disease detection, and enhanced treatment planning. The objective of this workshop is to bring comprehensive understanding of the impact of computer vision in clinical practice. Participants will gain insights into how this technology is reshaping healthcare and improving patient outcomes. By exploring the latest advancements in certified medical systems, attendees will learn about the integration of computer vision into existing medical frameworks and protocols. Moreover, the workshop will delve into current research areas within computer vision in medicine. Participants will be introduced to cutting-edge studies and ongoing projects that aim to further enhance the capabilities of computer vision in the healthcare domain. In the second part of the workshop, there will be an interactive session focused on implementing classification and segmentation networks using the JAX framework and the Flax library. \nPiotr Kawa  Analiza dźwięku (TTS, DF)   Generating audio DeepFakes and how to detect them   Recent advances in audio processing and speech synthesis allow the creation of realistic speech - DeepFakes. Despite a number of advantages, this technology poses a threat through its potential applications including disinformation spreading. Participants in this workshop will learn about the latest technologies for speech generation and then how to defend themselves against the malicious use of this technology using state-of-the-art DeepFake detection techniques.\n\n\n\nHistoria Rozmowy:\nHuman: jest coś z Large language models?\nAI:  Tak, mamy kilka warsztatów dotyczących dużych językowych modeli. Zajrzyj do listy warsztatów, aby zobaczyć szczegóły: Łukasz Augustyniak ma warsztat pt. \"Duże językowe modele - od demo do produkcji\". Kamil Kanclerz ma warsztat pt. „Problem subiektywny w NLP”.\nStudent: Świetnie, jest coś jeszcze innego z NLP?\nAsystent:\n\n&gt; Finished chain.\n\n\n' Tak, mamy kilka warsztatów związanych z NLP. Piotr Bielak ma warsztat pt. „Wprowadzenie do nowoczesnego wyszukiwania informacji”, a Denis Janiak ma warsztat pt. „Czy reprezentacja wie, czego nie wie? \".'"
  },
  {
    "objectID": "00_llm_intro/langchain_multichain_router.html",
    "href": "00_llm_intro/langchain_multichain_router.html",
    "title": "MultiPromptChain Router",
    "section": "",
    "text": "If you use google colab please install the following packages:\npip install \"langchain&gt;=0.0.200\"\n\nfrom langchain.chat_models import ChatOpenAI\n\n\nchat = ChatOpenAI(\n    temperature=0.0,\n    # openai_api_key=\"sk-&lt;your key here&gt;\"  # uncomment to use your own API key, othewise uses default .env key\n)\n\n\nfrom langchain.prompts import ChatPromptTemplate\n\n\nsummary_template = \"\"\"\nSummarize the following text delimited by triple backticks with 1 sentence.\nPaper:\n```{input}```\n\"\"\"\n\n\ngeneral_audience_summary_template = \"\"\"\nGenerate general audience a title for research paper.\nPaper:\n```{input}```\n\"\"\"\n\n\ntwitter_template = \"\"\"\nPrepare a tweet thread with 3 tweets based on paper description.\nPaper:\n```{input}```\n\"\"\"\n\n\nlinkedin_template = \"\"\"\nPrepare a longer linkedin post based on paper description. \nPaper:\n```{input}```\n\"\"\"\n\n\nfrom langchain.chains.router import MultiPromptChain\nfrom langchain.llms import OpenAI\n\n\nprompt_infos = [\n    {\n        \"name\": \"summary\", \n        \"description\": \"Good for academic summarizing research papers\",\n        \"prompt_template\": summary_template\n    },\n    {\n        \"name\": \"general_title\", \n        \"description\": \"Good for general audience title of paper\", \n        \"prompt_template\": general_audience_summary_template\n    },\n    {\n        \"name\": \"twitter\",\n        \"description\": \"Good for twitter thread\",\n        \"prompt_template\": twitter_template\n    },\n    {\n        \"name\": \"linkedin\",\n        \"description\": \"Good for linkedin post\",\n        \"prompt_template\": linkedin_template\n    }\n]\n\n\nchain = MultiPromptChain.from_prompts(OpenAI(), prompt_infos, verbose=True)\n\n\nchain.run(\"\"\"\ngenerale academic summary for \nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\")\n\n\n\n&gt; Entering new  chain...\nsummary: {'input': 'This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.'}\n&gt; Finished chain.\n\nThis paper presents an extensive open corpus of datasets and a multi-faceted sentiment classification benchmark for 27 languages from 6 language families.\n\n\n\nchain.run(\"\"\"\nI need it for twitter \nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\")\n\n\n\n&gt; Entering new  chain...\ntwitter: {'input': 'Introducing the most extensive open massively multilingual corpus of datasets for training sentiment models. With 79 manually selected datasets from over 350 datasets reported in the scientific literature, the corpus covers 27 languages representing 6 language families. Learn more about our multi-faceted sentiment classification benchmark!'}\n&gt; Finished chain.\n\n\n'\\n1. Introducing the most extensive open massively multilingual corpus of datasets for training sentiment models! 79 manually selected datasets from over 350 datasets reported in the scientific literature. Learn more about our multi-faceted sentiment classification benchmark. #SentimentAnalysis #DataScience #AI \\n\\n2. Covering 27 languages from 6 language families, our corpus provides a comprehensive resource for researchers working in sentiment analysis. Check out our benchmark and explore the potential of sentiment models! #SentimentAnalysis #DataScience #AI \\n\\n3. Ready to take your sentiment analysis models to the next level? Our multilingual corpus provides the resources you need. Download it now and take advantage of the best sentiment models available! #SentimentAnalysis #DataScience #AI'"
  },
  {
    "objectID": "00_llm_intro/langchain_multichain_router.html#setup",
    "href": "00_llm_intro/langchain_multichain_router.html#setup",
    "title": "MultiPromptChain Router",
    "section": "",
    "text": "If you use google colab please install the following packages:\npip install \"langchain&gt;=0.0.200\"\n\nfrom langchain.chat_models import ChatOpenAI\n\n\nchat = ChatOpenAI(\n    temperature=0.0,\n    # openai_api_key=\"sk-&lt;your key here&gt;\"  # uncomment to use your own API key, othewise uses default .env key\n)\n\n\nfrom langchain.prompts import ChatPromptTemplate\n\n\nsummary_template = \"\"\"\nSummarize the following text delimited by triple backticks with 1 sentence.\nPaper:\n```{input}```\n\"\"\"\n\n\ngeneral_audience_summary_template = \"\"\"\nGenerate general audience a title for research paper.\nPaper:\n```{input}```\n\"\"\"\n\n\ntwitter_template = \"\"\"\nPrepare a tweet thread with 3 tweets based on paper description.\nPaper:\n```{input}```\n\"\"\"\n\n\nlinkedin_template = \"\"\"\nPrepare a longer linkedin post based on paper description. \nPaper:\n```{input}```\n\"\"\"\n\n\nfrom langchain.chains.router import MultiPromptChain\nfrom langchain.llms import OpenAI\n\n\nprompt_infos = [\n    {\n        \"name\": \"summary\", \n        \"description\": \"Good for academic summarizing research papers\",\n        \"prompt_template\": summary_template\n    },\n    {\n        \"name\": \"general_title\", \n        \"description\": \"Good for general audience title of paper\", \n        \"prompt_template\": general_audience_summary_template\n    },\n    {\n        \"name\": \"twitter\",\n        \"description\": \"Good for twitter thread\",\n        \"prompt_template\": twitter_template\n    },\n    {\n        \"name\": \"linkedin\",\n        \"description\": \"Good for linkedin post\",\n        \"prompt_template\": linkedin_template\n    }\n]\n\n\nchain = MultiPromptChain.from_prompts(OpenAI(), prompt_infos, verbose=True)\n\n\nchain.run(\"\"\"\ngenerale academic summary for \nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\")\n\n\n\n&gt; Entering new  chain...\nsummary: {'input': 'This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.'}\n&gt; Finished chain.\n\nThis paper presents an extensive open corpus of datasets and a multi-faceted sentiment classification benchmark for 27 languages from 6 language families.\n\n\n\nchain.run(\"\"\"\nI need it for twitter \nMassively Multilingual Corpus of Sentiment Datasets and Multi-faceted Sentiment Classification Benchmark\nŁukasz Augustyniak, Szymon Woźniak, Marcin Gruza, Piotr Gramacki, Krzysztof Rajda, Mikołaj Morzy, Tomasz Kajdanowicz\nDespite impressive advancements in multilingual corpora collection and model training, developing large-scale deployments of multilingual models still presents a significant challenge. This is particularly true for language tasks that are culture-dependent. One such example is the area of multilingual sentiment analysis, where affective markers can be subtle and deeply ensconced in culture. This work presents the most extensive open massively multilingual corpus of datasets for training sentiment models. The corpus consists of 79 manually selected datasets from over 350 datasets reported in the scientific literature based on strict quality criteria. The corpus covers 27 languages representing 6 language families. Datasets can be queried using several linguistic and functional features. In addition, we present a multi-faceted sentiment classification benchmark summarizing hundreds of experiments conducted on different base models, training objectives, dataset collections, and fine-tuning strategies.\n\"\"\")\n\n\n\n&gt; Entering new  chain...\ntwitter: {'input': 'Introducing the most extensive open massively multilingual corpus of datasets for training sentiment models. With 79 manually selected datasets from over 350 datasets reported in the scientific literature, the corpus covers 27 languages representing 6 language families. Learn more about our multi-faceted sentiment classification benchmark!'}\n&gt; Finished chain.\n\n\n'\\n1. Introducing the most extensive open massively multilingual corpus of datasets for training sentiment models! 79 manually selected datasets from over 350 datasets reported in the scientific literature. Learn more about our multi-faceted sentiment classification benchmark. #SentimentAnalysis #DataScience #AI \\n\\n2. Covering 27 languages from 6 language families, our corpus provides a comprehensive resource for researchers working in sentiment analysis. Check out our benchmark and explore the potential of sentiment models! #SentimentAnalysis #DataScience #AI \\n\\n3. Ready to take your sentiment analysis models to the next level? Our multilingual corpus provides the resources you need. Download it now and take advantage of the best sentiment models available! #SentimentAnalysis #DataScience #AI'"
  }
]